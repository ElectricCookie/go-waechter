// Code generated by go-bindata.
// sources:
// templates/confirm-de.html
// templates/confirm-en.html
// templates/confirm.html
// templates/forgot-password-de.html
// templates/forgot-password-en.html
// templates/forgot-password.html
// templates/password-changed.html
// templates/test-email-template.html
// DO NOT EDIT!

package waechter

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesConfirmDeHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\x4d\x8e\x13\x31\x10\x85\xf7\x39\xc5\xd3\xac\x43\xae\x80\x66\x80\x05\xe2\x67\x01\x42\x59\xbb\xdd\xcf\xdd\x25\xdb\x65\x54\xae\x1e\x89\xb4\x72\x2d\x56\xb3\xcb\xc5\x50\x32\x43\x34\x20\x65\xef\xef\xd5\xe7\x6f\x5d\x31\x32\x89\x12\x77\x2e\x5e\x78\x87\xe3\x71\x03\x00\x7b\x29\x25\xb7\x5a\xa9\x58\x57\xec\x7e\x74\x9a\x86\x4a\x1c\x8f\xdb\xcd\xba\x82\x3a\x9e\x5f\x6e\x5e\xf1\xb1\x69\x12\xab\x0f\x8b\x7b\xd3\xeb\xce\x87\x37\x5f\x82\x14\x3c\xd2\x24\xc9\x41\x68\xd4\xdb\xbc\x53\xfd\x4a\x8e\x41\x33\x91\x4e\x4f\x86\x8f\xb3\x11\xdf\x38\x49\x77\x13\xda\xa2\x13\x06\xca\x45\xec\x5d\xab\x3f\x83\xfe\xda\x73\xe8\xe2\x67\xbd\x1d\x1e\xc4\x9d\x48\xad\x4c\x54\x7c\x17\x62\x64\xc5\x72\x1e\x47\x77\xce\xd4\x91\x8a\xcf\xa2\x79\x8b\xa5\x9e\xb7\xf1\xa9\xa9\x37\x24\xa3\x1c\x96\x1e\xe7\x50\x9c\xba\xbb\xa1\x99\x5a\x73\xda\xd5\xf2\xab\xc4\xd9\xff\x4f\xf4\x16\x7b\xea\xcb\x6d\x61\xe7\xdf\x0a\x62\xe6\xa7\xa7\x5a\x24\xce\xa0\x3d\xdf\xc1\x1c\x06\xea\x16\xf9\xf4\x5b\x95\xaf\x21\x8a\xa6\x10\x67\xc8\xa4\xcd\x2e\xe5\x76\x78\x4f\x03\xad\x3b\x4b\x71\xe2\x3e\xc6\xb6\xa8\x43\xba\x43\x2f\x22\x03\x75\xf1\xc3\x10\x6c\x8b\xde\x4a\xd0\x89\xe8\x97\x02\x8a\xfb\xec\xf2\xf8\x5c\xaf\x17\xd1\xfc\x42\x04\xcd\x45\x62\xfe\xe7\xc3\x7f\x02\x00\x00\xff\xff\x90\x0c\xbf\x0d\x16\x02\x00\x00")

func templatesConfirmDeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesConfirmDeHtml,
		"templates/confirm-de.html",
	)
}

func templatesConfirmDeHtml() (*asset, error) {
	bytes, err := templatesConfirmDeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/confirm-de.html", size: 534, mode: os.FileMode(420), modTime: time.Unix(1498505148, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConfirmEnHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\x3f\x4b\x03\x41\x10\xc5\xfb\x7c\x8a\x67\x04\x2b\x49\x63\x23\x58\x08\x0a\x82\x4d\x2a\xff\xd4\x9b\xbd\xd9\xdc\x90\xdd\x99\xb0\x3b\x67\x38\x96\xfd\xee\x92\x13\x8f\x53\xb4\x1c\x78\xbf\xc7\xef\x4d\xad\xe8\x28\xb0\x10\xd6\xc6\x16\x69\x8d\xd6\x56\x00\xf0\x4e\xd1\x6b\x22\xd4\x8a\xcd\x6b\xa1\x2c\x2e\x51\x6b\xd7\xab\x5a\x41\xd2\x9d\x53\xab\x05\xeb\x55\x02\xe7\xf4\x30\x98\xa9\xcc\x1d\x6f\x94\x39\x8c\xa0\xe4\x38\x2e\xc1\x5f\xa4\x91\xd8\xcc\x58\xef\xe4\x50\x10\x34\x23\xd3\x9e\x8b\x51\x66\xd9\xc3\xd9\x64\xf2\xa8\xe9\xe8\x64\xdc\xba\x44\x68\xed\x02\x4f\x1a\xa3\x9e\x60\x3d\x21\xb2\x1c\xb0\xa3\xe9\x54\x38\x6f\xfc\xe1\x8c\x30\xea\x90\xe1\xbc\xd7\x41\x6c\xf3\x8f\x7d\x50\x35\xca\xb3\xc2\x56\xed\xc7\x6c\xb4\x76\x8f\xe7\x70\xae\x42\xc7\x9d\x5c\x5d\xde\xdc\xde\xcd\x76\x7f\xab\x4d\x61\xef\x04\x85\xd3\x31\x8e\xe0\xbd\x68\x26\x58\xcf\xe5\xeb\x1f\x1b\xbc\xf4\xf4\x2d\x86\x13\xc7\x08\x51\xc3\x8e\x30\x14\xb7\x8b\x84\x41\x22\x95\x32\xf5\xcc\x63\x78\x39\xe1\x33\x00\x00\xff\xff\xe6\x8c\x65\x9f\xbb\x01\x00\x00")

func templatesConfirmEnHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesConfirmEnHtml,
		"templates/confirm-en.html",
	)
}

func templatesConfirmEnHtml() (*asset, error) {
	bytes, err := templatesConfirmEnHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/confirm-en.html", size: 443, mode: os.FileMode(420), modTime: time.Unix(1497043908, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConfirmHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\xeb\x8e\x1b\xb7\x15\xfe\xbf\x4f\x71\x96\x46\x81\xa4\xd8\xd1\x8c\xd6\x89\x93\x9d\x5b\xed\xb8\x6e\x63\x20\x6d\x8d\x34\x06\x0a\x04\x46\x41\x0d\xcf\x48\xcc\x72\xc8\x29\xc9\x91\xb4\x55\xf7\x5d\xfa\x2c\x7d\xb2\x82\xe4\x8c\x34\xba\x6d\x6c\xc7\x5b\xf4\x47\xfc\xc3\x5a\xde\xce\xed\xfb\xf8\x1d\x4e\x7e\xc9\x54\x65\xef\x5a\x84\x85\x6d\x44\x79\x91\xbb\x1f\x58\x37\x42\x9a\x82\x2c\xac\x6d\xd3\x38\x5e\xad\x56\x93\xd5\xd3\x89\xd2\xf3\x78\x7a\x73\x73\x13\xaf\xdd\x1e\x12\x36\xa5\xcb\x82\x74\x5a\xa6\xa6\x5a\x60\x43\x4d\xd4\xf0\x4a\x2b\xa3\x6a\x1b\x55\xaa\x49\x97\xbb\x7d\xea\xa1\x7d\xaa\xae\x79\x85\xfd\x0f\x71\x51\x20\x65\xe5\x05\x40\x6e\xb9\x15\x58\xe6\x71\xf8\x75\x33\x97\x51\xf4\x23\xaf\xe1\xb2\x31\xea\x5d\xe9\x46\x10\x45\x7e\xa1\x41\x4b\xc1\x85\x1c\xe1\x3f\x3a\xbe\x2c\xc8\xdf\xa2\xb7\x2f\xa2\x97\xaa\x69\xa9\xe5\x33\x81\x04\x2a\x25\x2d\x4a\x5b\x90\xd7\xaf\x0a\x64\x73\xe7\x29\x18\xcc\x2f\x7f\x44\xc9\x78\xfd\xce\x99\x3a\x36\xf4\x32\x9c\x8b\x7e\xb8\x6b\xc7\x56\x2c\xae\x6d\xec\x6a\x91\x41\xb5\xa0\xda\xa0\x2d\xde\xfe\xf0\x87\xe8\x6b\x32\xd8\x90\xb4\xc1\x82\x2c\x39\xae\x5a\xa5\xed\xe8\xe4\x8a\x33\xbb\x28\x18\x2e\x79\x85\x91\x1f\x5c\x01\x97\xdc\x72\x2a\x22\x53\x51\x81\xc5\x74\x92\x38\x33\xc6\xde\x09\x04\x87\x4f\xef\xae\x32\xc6\x47\xfd\x44\x75\x56\x28\x75\x0b\x14\x36\xd0\x52\xc6\xb8\x9c\xa7\x90\x64\x70\x7f\x01\x30\xf9\x1e\x29\xfb\x93\x99\x7f\xa3\xd8\x1d\x6c\xc0\x3b\x48\x61\x9a\x24\xbf\xe9\xd7\x5f\xad\x2d\x6a\x49\xc5\x4b\x41\x8d\x79\x8f\x1d\xbf\x85\x0d\x08\x2e\x31\x5a\x20\x9f\x2f\x6c\xba\xdb\x38\x0b\x2e\x1a\xaa\xe7\x5c\xfa\x00\xc6\xc1\x44\x2b\x9c\xdd\x72\x1b\xb9\xd0\x23\xc3\xff\x89\x11\x65\x3f\x75\xc6\x0e\xae\xa2\xc6\x9c\x5d\x73\xd6\x2d\x9d\x09\xbc\x02\xcb\x60\x03\x33\xa5\x19\xea\xa8\x52\x42\xd0\xd6\x60\x3a\xfc\x91\x41\x63\x54\xe4\x77\x46\xc2\xb4\xb4\xc2\x14\x92\xd6\x8e\xa7\xf5\x78\xda\xd9\xe5\xcd\x7c\x6b\xd1\x07\xda\xe7\x05\xb4\xb3\x2a\xdb\x4b\xb5\x8f\xc6\x95\x9b\x4b\x4c\x41\x2a\x89\x19\xf8\xa0\x19\x56\x4a\x53\xcb\x95\x1c\xa6\x5d\x3e\x5c\x5a\xd4\xad\x12\x7e\x21\x6a\x14\xc3\x14\x66\xbc\xea\x66\xbc\x0a\xce\x5b\xd8\x00\xe3\xa6\x15\xf4\x2e\x85\x99\x50\xd5\x6d\xb6\xad\xdf\xf4\x69\xbb\x0e\x28\xe6\xb1\xc7\xbe\xbc\x38\x26\xfc\x43\xbc\x78\xde\x20\xe3\x14\x94\x14\x77\x60\x2a\x8d\x28\x81\x4a\x06\x9f\x35\x74\x1d\x88\x96\x7e\xf1\x75\xd2\xae\x3f\x87\xcd\x05\x00\xc0\x73\x17\xf1\x40\xd0\x2d\x11\x9e\x5e\x27\xed\x3a\x04\x0b\xf0\xfc\xa1\xe5\x83\x38\xf7\xef\x51\x1f\xb8\x8f\xfb\x22\x5f\x3b\x79\x01\xc8\x55\xfa\x17\x7f\xcd\x7f\xaf\xaa\xae\x41\x69\xff\x8a\xd6\x72\x39\x37\xa5\xf7\x96\xab\xf4\x85\x10\x6a\xf5\xe6\xcf\x7f\x8c\xb7\x33\x6f\xf8\x1a\x85\x79\x83\xfa\xb5\xac\x16\xe5\xcd\xb3\x3c\x3e\x9c\x73\x86\xe3\xf3\x96\xf3\xd8\x7b\x3f\x19\x9e\xb0\xe8\x42\x84\xe9\xf4\xdd\x43\x85\x9d\xf4\x17\x2e\x9a\x6b\xd5\xb5\x51\xcd\xd7\x7d\x09\x43\x4d\x1c\x4b\xe0\x92\x37\xae\x50\x54\xda\xec\xb0\x36\x23\xc7\x27\x11\xf5\x99\x0a\x2e\x6f\x61\xa1\xb1\x0e\xd2\x6b\xd2\x38\xae\x95\xb4\x66\x32\x57\x6a\x2e\x90\xb6\xdc\x4c\x2a\xd5\xb8\x98\x7e\x57\xd3\x86\x8b\xbb\xe2\xed\xac\x93\xb6\x4b\x9f\x26\xc9\xd5\x17\x49\x72\xf5\x65\x92\x5c\x7d\x95\x24\x04\x34\x8a\x82\x78\xef\x66\x81\x68\xc9\xa9\x94\x00\xce\xa5\xeb\x17\x3d\xf8\x21\x23\xe8\xb4\xf8\xec\x97\x85\xf4\x79\x16\xac\x6e\x6b\x72\xac\xbc\x1f\xc1\x6a\x2e\x4f\xb1\x7a\xd2\xfc\xe4\x74\xa2\x6b\x64\xd4\xa2\x8e\xa6\x49\xb2\xe5\xae\xc3\x69\x04\xd3\x11\x89\xe3\xd0\x79\x72\xaf\x6b\x7e\xb2\x20\x33\x5a\xdd\x3a\xd4\x25\x4b\xe1\x49\x5d\xd7\x59\xe8\x1b\x8c\x2f\x8f\x77\x38\xbf\x4a\xa7\xfd\xb6\xd1\x15\x80\x7f\xc1\xeb\x57\xef\xca\xbe\xb2\xb9\x17\x26\xd0\xca\x9d\x6e\x35\x1a\x94\xd6\x0b\x06\xe9\x55\xa9\x20\x09\x81\x0a\x85\xe8\xe5\x74\x3b\x76\x52\x36\x8c\x43\x1b\x21\xcf\x1c\xe0\x54\xf0\xb9\x2c\x48\x85\x4e\x7e\xc8\x10\x58\x48\xfa\x59\xe2\x2e\x2c\x29\xb7\xb0\xe6\x56\xef\x06\x6e\xc8\x86\x03\x63\xe9\x73\x87\x1c\xd8\x5e\x9d\xfd\xc8\x49\xea\x68\x47\xa4\x3b\x81\x29\xae\x69\x65\xc5\xdd\xce\xfe\x1e\xa6\xa3\x2a\xf5\x22\x97\xb4\xeb\xa0\xb3\x3b\x4d\x1a\x02\x7c\xa0\x2c\x3f\x57\x8b\xde\xc7\x7e\xbc\x3b\xcc\xb3\xa3\x0a\xed\xea\x5c\xe6\xd6\xc1\x5d\xba\xaa\x8c\x4a\xe1\x35\xde\x1f\x4a\xc3\x99\x6c\x89\xda\xf2\x8a\x8a\x7e\xd6\xaa\x36\x63\x5c\x63\xe5\x5b\x80\xb0\xfa\xa0\x5a\x43\x27\x74\x72\x09\x7d\x82\x8f\x4a\x88\xc3\x0c\x4e\xc4\x7b\x92\x10\x47\x80\x55\xae\xeb\x17\xe4\xf8\x1a\x1d\x89\x20\x79\xc0\xd7\xd0\xe4\xb8\xf4\x9c\x09\xad\xee\x5c\xc1\x5c\xe7\xcb\x46\x25\x17\x58\xdb\x3d\xfc\x7e\x09\x39\xfa\x8b\xe2\x0c\xbd\x07\xf0\x2b\xa5\x59\xb4\xd2\xb4\x4d\x67\x1a\xe9\x6d\xe4\xc6\x67\xa0\x9d\x3a\x68\xaf\xbf\x74\xc5\x3c\xe0\xd7\x27\xe0\xf2\xd9\x17\x4f\xbf\xd0\x1f\xf1\x01\x7d\x38\xbd\xfb\xda\x5e\xf7\xc4\x74\x4f\x22\x2a\x6c\x41\x08\xf8\xb7\xb6\xfb\x23\xdc\xf2\x82\xb8\xdb\x4a\xc0\xe8\xaa\x20\x9b\x0d\x4c\xbe\x53\x73\xf5\xf6\xfb\xef\xe0\xfe\xfe\x20\xd4\xd4\xbf\x82\xfa\xe8\x34\x65\xbc\x33\x3e\xb8\x81\x08\x81\x01\xc3\x53\xca\x6f\x3e\x7c\x48\xf9\xc9\x11\xec\xbd\x14\x79\xbd\xd8\xe1\x78\xed\xb2\x8a\x2d\x73\xff\x69\xf7\x5f\x48\x30\xf6\x25\x1f\xaf\x7c\x0a\x60\xcb\xbc\x3d\x56\x97\xa9\x53\xc3\x03\x3d\xeb\x13\xb7\xaa\x75\xcb\x60\x94\xe0\x0c\x9e\x30\xc6\x0e\x78\x1c\xb7\x27\x74\xe0\x01\xba\x9c\x45\xf6\xc3\x45\xf1\xe3\xc3\x1e\x37\x9b\xc3\xba\x0e\xfd\x22\xdb\xeb\x1e\x19\x29\xff\xf3\xef\x3d\x94\x02\x3a\x63\xb1\xf9\xb4\x48\x0d\x95\x72\xda\x41\xf6\x94\x6c\x5b\x8a\xaa\xd3\x46\xe9\xc0\xa7\xbe\x55\x53\x4a\x83\xe9\xf0\x7e\x49\x17\x28\x96\xe8\xb4\x6c\xe4\xd0\xdf\x92\x71\x76\xd7\xd7\x27\xe4\x8a\x94\x9b\x0d\x80\xc5\xa6\x15\xd4\x22\x10\x7f\x91\x08\x4c\xe0\xfe\x3e\x8f\x19\x5f\xfe\x7f\xe4\x9b\xf8\x7f\x7b\x29\x87\x27\xdb\x15\x7c\x3b\xa4\x7e\x05\x2f\x34\xa7\xe2\x0a\x0c\x95\x26\x32\xa8\x79\x3d\xd6\xea\xeb\xf7\xae\xc6\xae\x18\xfd\xc7\xef\xff\xa0\x1c\x8f\xa7\xc0\x06\x5b\xaa\xa9\xc5\x8f\x90\xdb\xf3\x0a\xe9\x1a\x5f\x80\x66\xb5\xe0\x16\xb3\x31\x64\x3f\x9f\x25\x2c\xfb\x71\xc3\x19\x73\x6c\x9b\xcd\xbd\xb1\x82\x3c\x99\xde\xd0\xe9\xcd\x57\xa4\xcc\x69\xff\x51\xe1\xc4\xfb\xa5\x92\x35\xd7\xcd\x0b\xc6\x34\x1a\x33\xd6\xf0\x93\x52\x7c\xf4\xd5\x3f\x7a\x0c\xf7\x0e\xf6\x82\x1f\xb3\xea\xdb\x13\x17\xc9\xb7\x79\x3f\x5c\x05\xa3\x52\xe9\x86\x8a\x40\x1e\xab\xa9\x34\xb5\xd2\x4d\xf0\xbd\x13\xaa\x8c\x80\xa5\x7a\x8e\xb6\x20\x7f\x9f\x09\x2a\x6f\x8f\xb9\xe5\x92\xfa\xa6\xb3\xd6\xa1\x1b\x18\x46\x7f\x6d\x11\xbf\xb6\x88\xc7\x69\x11\x1f\xaa\x97\xef\xdf\x3d\x76\x9c\xae\x95\xf2\x58\x9e\x94\xcb\x23\x3a\xfb\xf5\xb3\x1f\x17\x47\x15\x3e\xf5\xf0\x7f\x64\xeb\xce\xc6\x45\x1e\x7b\xcb\xee\x3b\xdb\x36\xa2\xfc\x6f\x00\x00\x00\xff\xff\x17\x2a\x1e\xf5\x7e\x16\x00\x00")

func templatesConfirmHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesConfirmHtml,
		"templates/confirm.html",
	)
}

func templatesConfirmHtml() (*asset, error) {
	bytes, err := templatesConfirmHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/confirm.html", size: 5758, mode: os.FileMode(420), modTime: time.Unix(1498506787, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesForgotPasswordDeHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\xcd\x6a\xeb\x30\x10\x46\xf7\x79\x8a\x8f\x2c\xbc\xca\xf5\x0b\xdc\x55\xa1\x29\x14\x5a\x28\xa4\xab\xee\x94\xe8\xb3\x2d\x6c\x8f\x40\x1a\x91\x62\xe1\x77\x2f\x72\x9b\xc4\x59\x64\xa9\x1f\xce\x9c\x39\x39\xc3\xb2\x71\x42\x6c\x4f\x5e\x94\xa2\x5b\xcc\xf3\x06\x00\x0e\x8e\xe8\xcc\x91\x02\x96\xf7\xfd\xbf\x77\xe3\x06\x4c\x29\xe0\x2b\x85\x2a\xa5\x71\xf8\x7f\xea\x23\x75\x4a\xd2\xe2\xb5\x0b\x8c\xf8\x30\x31\x9e\x7d\xd0\x08\x23\x2d\x1b\x1f\x2c\x83\xd6\x78\xf1\x43\x4b\x59\x80\x96\x23\x52\x99\x83\xa8\xec\x28\xe5\xfc\xe6\xa4\xdf\x21\x8d\x05\x72\x45\x60\x4a\xa8\x4c\x19\x22\x96\x41\xea\x4d\xce\xa0\xd8\x22\xb7\x59\x49\x1f\x93\xaa\x97\x4f\x7e\xdf\xbc\x57\x84\x3b\x4d\xca\x03\x46\xe3\xbd\x32\xdc\x31\x9e\x1d\xe3\x75\xe5\x73\x0a\x96\x30\x82\x9c\x51\xef\xc7\x72\x35\xcf\x68\x19\x8b\xbe\xd6\x38\xf8\x61\xd0\xbf\xfd\xfa\xa5\x55\xf5\x74\x11\x2f\x6d\xec\x83\x32\xbf\x75\x77\xe8\x2b\xbf\x7c\x97\x4b\xa3\xf5\x70\xd7\x8a\x0f\x8e\x81\x52\xe3\xe6\xff\x13\x00\x00\xff\xff\x5e\xd1\xb2\x4b\xb7\x01\x00\x00")

func templatesForgotPasswordDeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesForgotPasswordDeHtml,
		"templates/forgot-password-de.html",
	)
}

func templatesForgotPasswordDeHtml() (*asset, error) {
	bytes, err := templatesForgotPasswordDeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/forgot-password-de.html", size: 439, mode: os.FileMode(420), modTime: time.Unix(1497044570, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesForgotPasswordEnHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\x31\x4f\xc4\x30\x0c\x85\xf7\xfb\x15\x4f\x87\xc4\x84\xba\x30\x01\x33\x03\x2b\xba\x85\x31\xd7\xb8\xad\x45\x6a\x1f\xb1\xa3\x52\x45\xfd\xef\xa8\x15\xea\x71\x03\x5b\x62\xfb\xe9\x7d\x5f\xad\x88\xd4\xb1\x10\x8e\xad\x8a\x93\xf8\x11\xcb\x72\x00\x80\x0f\x2d\x70\x4d\x11\xc5\x30\x6b\x41\xa7\xb9\x57\x5f\x9f\x19\x97\x60\x36\x69\x8e\x0d\xde\xba\x6d\x99\x29\xa4\x34\x23\x72\xdc\xbe\x6d\x10\xb4\x43\x90\x9e\xc0\x8e\x62\x2c\x3d\x7c\x20\x24\x96\x4f\x9c\x29\xe9\xf4\x7c\xa8\x15\x24\x71\x6d\x3b\xfc\xa1\x38\x17\x77\x95\x13\x7d\x5f\x41\xde\xc9\x5c\x33\x61\x9c\xf7\xde\x7f\xc2\x9d\xaa\x53\xbe\x09\x9f\x06\x36\xd0\x18\x38\x61\x0a\x06\x23\x71\xb8\xa2\x56\x34\xaf\xdb\x74\x59\x76\x89\xc8\x51\xee\xef\x1e\x9f\x5e\x1c\x99\xbe\x0a\xd9\x76\xfa\xeb\x71\xe3\xfd\xb0\x5b\x1a\x8f\x97\x34\x83\x7b\x59\x11\x7d\x6d\x1b\xc9\x2c\xf4\xd4\x5c\x21\x7f\x02\x00\x00\xff\xff\xf1\x98\x7e\xcf\x66\x01\x00\x00")

func templatesForgotPasswordEnHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesForgotPasswordEnHtml,
		"templates/forgot-password-en.html",
	)
}

func templatesForgotPasswordEnHtml() (*asset, error) {
	bytes, err := templatesForgotPasswordEnHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/forgot-password-en.html", size: 358, mode: os.FileMode(420), modTime: time.Unix(1497044523, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesForgotPasswordHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\xd9\x6e\x23\xb9\x15\x7d\xf7\x57\x5c\xb3\x11\x60\x26\x50\xa9\x4a\xf6\x4c\xcf\xb8\x16\xa5\x3b\x9d\x4e\xd2\x40\x96\x46\xd2\x06\x02\x0c\xfc\x40\x15\x6f\x49\x1c\xb3\xc8\x0a\xc9\xd2\x12\xc5\xff\x92\x6f\xc9\x97\x0d\x48\x96\xa4\xd2\xe6\x99\x71\xdb\x6f\xed\x07\x4b\xdc\xee\x76\x0e\xcf\xa5\xf2\x4b\xa6\x4a\xbb\x6a\x10\x66\xb6\x16\xe3\x8b\xdc\x7d\xc0\xb2\x16\xd2\x14\x64\x66\x6d\x93\xc6\xf1\x62\xb1\x18\x2e\xae\x87\x4a\x4f\xe3\xd1\xcd\xcd\x4d\xbc\x74\x7b\x48\xd8\x94\xce\x0b\xd2\x6a\x99\x9a\x72\x86\x35\x35\x51\xcd\x4b\xad\x8c\xaa\x6c\x54\xaa\x3a\x9d\xef\xf6\xa9\xc7\xf6\xa9\xaa\xe2\x25\x76\x1f\xc4\x45\x81\x94\x8d\x2f\x00\x72\xcb\xad\xc0\x71\x1e\x87\x4f\x37\x73\x19\x45\x3f\xf0\x0a\x2e\x6b\xa3\xee\xc6\x6e\x04\x51\xe4\x17\x6a\xb4\x14\x5c\xc8\x11\xfe\xbb\xe5\xf3\x82\xfc\x2b\xba\x7d\x1b\xbd\x53\x75\x43\x2d\x9f\x08\x24\x50\x2a\x69\x51\xda\x82\x7c\x78\x5f\x20\x9b\x3a\x4f\xc1\x60\x7e\xf9\x03\x4a\xc6\xab\x3b\x67\xea\xd8\xd0\xbb\x70\x2e\xfa\xb4\x6a\xfa\x56\x2c\x2e\x6d\xec\x6a\x91\x41\x39\xa3\xda\xa0\x2d\x6e\x3f\xfd\x31\xfa\x9e\x6c\x6c\x48\x5a\x63\x41\xe6\x1c\x17\x8d\xd2\xb6\x77\x72\xc1\x99\x9d\x15\x0c\xe7\xbc\xc4\xc8\x0f\x06\xc0\x25\xb7\x9c\x8a\xc8\x94\x54\x60\x31\x1a\x26\xce\x8c\xb1\x2b\x81\xe0\xf0\xe9\xdc\x95\xc6\xf8\xa8\x5f\xa9\xd6\x0a\xa5\xee\x81\xc2\x1a\x1a\xca\x18\x97\xd3\x14\x92\x0c\x1e\x2e\x00\x86\xff\x40\xca\xfe\x6a\xa6\xbf\x57\x6c\x05\x6b\xf0\x0e\x52\x18\x25\xc9\x6f\xba\xf5\xf7\x4b\x8b\x5a\x52\xf1\x4e\x50\x63\x7e\xc1\x8e\xdf\xc2\x1a\x04\x97\x18\xcd\x90\x4f\x67\x36\xdd\x6d\x9c\x04\x17\x35\xd5\x53\x2e\x7d\x00\xfd\x60\xa2\x05\x4e\xee\xb9\x8d\x5c\xe8\x91\xe1\xff\xc1\x88\xb2\x1f\x5b\x63\x37\xae\xa2\xda\x9c\x5d\x73\xd6\x2d\x9d\x08\x1c\x80\x65\xb0\x86\x89\xd2\x0c\x75\x54\x2a\x21\x68\x63\x30\xdd\x7c\xc9\xa0\x36\x2a\xf2\x3b\x23\x61\x1a\x5a\x62\x0a\x49\x63\xfb\xd3\xba\x3f\xed\xec\xf2\x7a\xba\xb5\xe8\x03\xed\xf2\x02\xda\x5a\x95\xed\xa5\xda\x45\xe3\xca\xcd\x25\xa6\x20\x95\xc4\x0c\x7c\xd0\x0c\x4b\xa5\xa9\xe5\x4a\x6e\xa6\x5d\x3e\x5c\x5a\xd4\x8d\x12\x7e\x21\xaa\x15\xc3\x14\x26\xbc\x6c\x27\xbc\x0c\xce\x1b\x58\x03\xe3\xa6\x11\x74\x95\xc2\x44\xa8\xf2\x3e\xdb\xd6\x6f\x74\xdd\x2c\x03\x8a\x79\xec\xb1\x1f\x5f\x1c\x13\xfe\x31\x5e\xbc\xa9\x91\x71\x0a\x4a\x8a\x15\x98\x52\x23\x4a\xa0\x92\xc1\x57\x35\x5d\x06\xa2\xa5\xdf\x7c\x9f\x34\xcb\xaf\x61\x7d\x01\x00\xf0\xc6\x45\xbc\x21\xe8\x96\x08\xd7\x57\x49\xb3\x0c\xc1\x02\xbc\x79\x6c\xf9\x20\xce\xfd\x7b\xd4\x05\xee\xe3\xbe\xc8\x97\x4e\x5e\x00\x72\x95\xfe\xdd\x5f\xf3\x3f\xa8\xb2\xad\x51\xda\x7f\xa2\xb5\x5c\x4e\xcd\xd8\x7b\xcb\x55\xfa\x56\x08\xb5\xf8\xf8\xb7\x3f\xc5\xdb\x99\x8f\x7c\x89\xc2\x7c\x44\xfd\x41\x96\xb3\xf1\xcd\xeb\x3c\x3e\x9c\x73\x86\xe3\xf3\x96\xf3\xd8\x7b\x3f\x19\x9e\xb0\xe8\x42\x84\xd1\xe8\xee\xb1\xc2\x0e\xbb\x0b\x17\x4d\xb5\x6a\x9b\xa8\xe2\xcb\xae\x84\xa1\x26\x8e\x25\x70\xc9\x6b\x57\x28\x2a\x6d\x76\x58\x9b\x9e\xe3\x93\x88\xfa\x4c\x05\x97\xf7\x30\xd3\x58\x05\xe9\x35\x69\x1c\x57\x4a\x5a\x33\x9c\x2a\x35\x15\x48\x1b\x6e\x86\xa5\xaa\x5d\x4c\xbf\xab\x68\xcd\xc5\xaa\xb8\x9d\xb4\xd2\xb6\xe9\x75\x92\x0c\xbe\x49\x92\xc1\xb7\x49\x32\xf8\x2e\x49\x08\x68\x14\x05\xf1\xde\xcd\x0c\xd1\x92\x53\x29\x01\x9c\x4b\xd7\x2f\x7a\xf0\x43\x46\xd0\x6a\xf1\xd5\xe7\x85\xf4\x75\x16\xac\x6e\x6b\x72\xac\xbc\x4f\x60\x35\x97\xa7\x58\x3d\xac\x7f\x74\x3a\xd1\xd6\x32\x6a\x50\x47\xa3\x24\xd9\x72\xd7\xe1\xd4\x83\xe9\x88\xc4\x71\xe8\x3c\xb9\xd7\x35\x3f\x59\x90\x09\x2d\xef\x1d\xea\x92\xa5\xf0\xaa\xaa\xaa\x2c\xf4\x0d\xc6\xe7\xc7\x3b\x9c\x5f\xa5\xd3\x6e\x5b\xef\x0a\xc0\x7f\xe1\xc3\xfb\xbb\x71\x57\xd9\xdc\x0b\x13\x68\xe5\x4e\x37\x1a\x0d\x4a\xeb\x05\x83\x74\xaa\x54\x90\x84\x40\x89\x42\x74\x72\xba\x1d\x3b\x29\xdb\x8c\x43\x1b\x21\xaf\x1d\xe0\x54\xf0\xa9\x2c\x48\x89\x4e\x7e\xc8\x26\xb0\x90\xf4\xeb\xc4\x5d\x58\x32\xde\xc2\x9a\x5b\xbd\x1b\xb8\x21\xdb\x1c\xe8\x4b\x9f\x3b\xe4\xc0\xf6\xea\xec\x47\x4e\x52\x7b\x3b\x22\xdd\x0a\x4c\x71\x49\x4b\x2b\x56\x3b\xfb\x7b\x98\xf6\xaa\xd4\x89\x5c\xd2\x2c\x83\xce\xee\x34\x69\x13\xe0\x23\x65\xf9\xb9\x5a\x74\x3e\xf6\xe3\xdd\x61\x9e\x1d\x55\x68\x57\xe7\x71\x6e\x1d\xdc\x63\x57\x95\x5e\x29\xbc\xc6\xfb\x43\x69\x38\x93\xcd\x51\x5b\x5e\x52\xd1\xcd\x5a\xd5\x64\x8c\x6b\x2c\x7d\x0b\x10\x56\x1f\x54\x6b\xd3\x09\x9d\x5c\x42\x97\xe0\x8b\x12\xe2\x30\x83\x13\xf1\x9e\x24\xc4\x11\x60\xa5\xeb\xfa\x05\x39\xbe\x46\x47\x22\x48\x1e\xf1\xb5\x69\x72\x5c\x7a\xce\x84\x56\x77\xae\x60\xae\xf3\x65\xbd\x92\x0b\xac\xec\x1e\x7e\x9f\x43\x8e\xee\xa2\x38\x43\xbf\x00\xf8\x85\xd2\x2c\x5a\x68\xda\xa4\x13\x8d\xf4\x3e\x72\xe3\x33\xd0\x8e\x1c\xb4\x57\xdf\xba\x62\x1e\xf0\xeb\x19\xb8\x7c\xf6\xc5\xd3\x2d\x74\x47\x7c\x40\xbf\x9e\xde\x5d\x6d\xaf\x3a\x62\xba\x27\x11\x15\xb6\x20\x04\xfc\x5b\xdb\x7d\x09\xb7\xbc\x20\xee\xb6\x12\x30\xba\x2c\xc8\x7a\x0d\x43\xff\xa4\x96\xab\xbf\xa8\xa9\xba\xd5\x02\x1e\x1e\x0e\x22\x4e\xfd\x63\xa8\x0b\x52\x53\xc6\x5b\xe3\x63\xdc\xf0\x21\x10\x61\xf3\xa2\xf2\x9b\x0f\xdf\x53\x7e\xb2\x87\x7e\xa7\x48\x5e\x36\x76\x70\x5e\xb9\xe4\x62\xcb\xdc\x3f\xed\xfe\x85\x3c\x63\x5f\xf9\xfe\xca\x73\xe0\x3b\xce\x9b\x63\x91\x19\x39\x51\x3c\x90\xb5\x2e\x71\xab\x1a\xb7\x0c\x46\x09\xce\xe0\x15\x63\xec\x80\xce\x71\x73\x42\x0e\x1e\x61\xcd\x59\x80\x7f\xbd\x36\x3e\x3d\xec\x7e\xcf\x39\xac\xeb\xa6\x6d\x64\x7b\x4d\x24\x23\xe3\xff\xff\x6f\x0f\xa5\x80\x4e\x5f\x73\x9e\x17\xa9\x4d\xa5\x9c\x84\x90\x3d\x41\xdb\x96\xa2\x6c\xb5\x51\x3a\xf0\xa9\xeb\xd8\x89\xff\x0b\xd6\xc3\x4b\x26\x0d\x2f\x99\x01\xfc\x19\xc5\x1c\x9d\xba\x0d\xe0\xad\xe6\x54\x0c\xc0\x50\x69\x22\x83\x9a\x57\x7d\x09\xbb\x6a\x96\x7b\xb9\x5f\x5d\x9d\xd0\x34\x32\x5e\xaf\xc1\x62\xdd\x08\x6a\x11\x48\xf7\x9b\x90\xc0\xc3\x43\x1e\x33\x3e\x7f\xa9\x62\xbc\x9c\x2c\x19\x6c\xa8\xa6\x16\x9f\xa0\x41\xe7\xf5\xc2\x75\x83\x00\xcc\x62\xc6\x2d\x66\x7d\xc0\x7e\x3e\x4b\x98\x77\xe3\x9a\x33\xe6\x7e\xf9\x4f\xa6\xde\x58\x41\x5e\x8d\x6e\xe8\xe8\xe6\xbb\xfe\x6d\x3e\xa9\x3d\x47\xbf\x76\x7b\x8f\xc0\xce\xc6\x5e\x7c\x7d\xda\x6c\xe9\x72\xd8\xde\xfc\x70\x11\x8c\x4a\xa5\x6b\x2a\x02\x3b\xac\xa6\xd2\x54\x4a\xd7\xc1\xf7\xee\x66\x1e\x92\x65\xd2\x5a\xab\xe4\x27\x5c\x76\x7c\x69\xbe\xc8\xdf\x17\xf9\x7b\x1e\xf9\xa3\x94\x7e\x96\xf6\x25\x4f\xd0\xbe\x4a\x29\x8b\x7a\x47\xe7\x03\xf9\x3b\x22\xb4\x5f\x3f\xfb\x82\x3e\xaa\xf1\xa9\xd7\xed\x0b\x5b\x77\x36\x2e\xf2\xd8\x5b\x76\x3f\x26\x6d\x2d\xc6\x3f\x05\x00\x00\xff\xff\x77\x33\xb8\xee\x63\x15\x00\x00")

func templatesForgotPasswordHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesForgotPasswordHtml,
		"templates/forgot-password.html",
	)
}

func templatesForgotPasswordHtml() (*asset, error) {
	bytes, err := templatesForgotPasswordHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/forgot-password.html", size: 5475, mode: os.FileMode(420), modTime: time.Unix(1498506787, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesPasswordChangedHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\x5b\x93\xdc\x38\x15\x7e\x9f\x5f\x71\xc6\x29\x8a\x5d\x6a\xd4\x76\x4f\x76\xc3\xc6\x6d\x37\x09\x21\x40\x1e\x58\x52\x90\x54\x41\x6d\xcd\x83\x5a\x3a\xb6\xb5\x23\x4b\x46\x92\xfb\x42\x33\xff\x85\xdf\xc2\x2f\xa3\x24\xdb\xdd\xee\xcb\x34\xd9\x5c\x5e\x80\x79\xe8\x6e\x5d\x7c\x2e\xdf\xf9\xce\x27\x79\xb2\x6b\xae\x99\xdb\x34\x08\x95\xab\xe5\xfc\x2a\xf3\x5f\xb0\xae\xa5\xb2\x79\x54\x39\xd7\xa4\x71\xbc\x5a\xad\x26\xab\xa7\x13\x6d\xca\x78\xfa\xfc\xf9\xf3\x78\xed\xf7\x44\xdd\xa6\x74\x99\x47\xad\x51\xa9\x65\x15\xd6\xd4\x92\x5a\x30\xa3\xad\x2e\x1c\x61\xba\x4e\x97\xfb\x7d\xfa\xd2\x3e\x5d\x14\x82\x61\xff\x15\xf9\x28\x90\xf2\xf9\x15\x40\xe6\x84\x93\x38\xcf\xe2\xee\xdb\xcf\x5c\x13\xf2\x83\x28\xe0\xba\xb6\xfa\x6e\xee\x47\x40\x48\x58\xa8\xd1\x51\xf0\x21\x13\xfc\x5b\x2b\x96\x79\xf4\x17\xf2\xfe\x25\x79\xa5\xeb\x86\x3a\xb1\x90\x18\x01\xd3\xca\xa1\x72\x79\xf4\xe6\x75\x8e\xbc\xf4\x9e\x3a\x83\xd9\xf5\x0f\xa8\xb8\x28\xee\xbc\xa9\x53\x43\xaf\xba\xe7\xc8\xbb\x4d\x33\xb6\xe2\x70\xed\x62\x8f\xc5\x0c\x58\x45\x8d\x45\x97\xbf\x7f\xf7\x5b\xf2\x5d\x34\xd8\x50\xb4\xc6\x3c\x5a\x0a\x5c\x35\xda\xb8\xd1\x93\x2b\xc1\x5d\x95\x73\x5c\x0a\x86\x24\x0c\x6e\x40\x28\xe1\x04\x95\xc4\x32\x2a\x31\x9f\x4e\x12\x6f\xc6\xba\x8d\x44\xf0\xf5\xe9\xdd\x31\x6b\x43\xd4\x4f\x74\xeb\xa4\xd6\xf7\x40\x61\x0b\x0d\xe5\x5c\xa8\x32\x85\x64\x06\x0f\x57\x00\x93\x3f\x21\xe5\x7f\xb0\xe5\xaf\x35\xdf\xc0\x16\x82\x83\x14\xa6\x49\xf2\xb3\x7e\xfd\xf5\xda\xa1\x51\x54\xbe\x92\xd4\xda\x0f\xd8\xf1\x0b\xd8\x82\x14\x0a\x49\x85\xa2\xac\x5c\xba\xdf\xb8\xe8\x5c\xd4\xd4\x94\x42\x85\x00\xc6\xc1\x90\x15\x2e\xee\x85\x23\x3e\x74\x62\xc5\xdf\x91\x50\xfe\x63\x6b\xdd\xe0\x8a\xd4\xf6\xd1\x35\x6f\xdd\xd1\x85\xc4\x1b\x70\x1c\xb6\xb0\xd0\x86\xa3\x21\x4c\x4b\x49\x1b\x8b\xe9\xf0\x63\x06\xb5\xd5\x24\xec\x24\xd2\x36\x94\x61\x0a\x49\xe3\xc6\xd3\x66\x3c\xed\xed\x8a\xba\xdc\x59\x0c\x81\xf6\x79\x01\x6d\x9d\x9e\x1d\xa4\xda\x47\xe3\xe1\x16\x0a\x53\x50\x5a\xe1\x0c\x42\xd0\x1c\x99\x36\xd4\x09\xad\x86\x69\x9f\x8f\x50\x0e\x4d\xa3\x65\x58\x20\xb5\xe6\x98\xc2\x42\xb0\x76\x21\x58\xe7\xbc\x81\x2d\x70\x61\x1b\x49\x37\x29\x2c\xa4\x66\xf7\xb3\x1d\x7e\xd3\xa7\xcd\xba\xab\x62\x16\x87\xda\xcf\xaf\x4e\x09\x7f\x89\x17\x2f\x6a\xe4\x82\x82\x56\x72\x03\x96\x19\x44\x05\x54\x71\xf8\xaa\xa6\xeb\x8e\x68\xe9\x37\xdf\x25\xcd\xfa\x6b\xd8\x5e\x01\x00\xbc\xf0\x11\x0f\x04\xdd\x11\xe1\xe9\x6d\xd2\xac\xbb\x60\x01\x5e\x5c\x5a\x3e\x8a\xf3\xb0\x8f\xfa\xc0\x43\xdc\x57\xd9\xda\xcb\x0b\x40\xa6\xd3\x3f\x86\x36\xff\x8d\x66\x6d\x8d\xca\xfd\x19\x9d\x13\xaa\xb4\xf3\xe0\x2d\xd3\xe9\x4b\x29\xf5\xea\xed\xf7\xbf\x8b\x77\x33\x6f\xc5\x1a\xa5\x7d\x8b\xe6\x8d\x62\xd5\xfc\xf9\xb3\x2c\x3e\x9e\xf3\x86\xe3\xc7\x2d\x67\x71\xf0\x7e\x36\x3c\xe9\xd0\x87\x08\xd3\xe9\xdd\x25\x60\x27\x7d\xc3\x91\xd2\xe8\xb6\x21\x85\x58\xf7\x10\x76\x98\x78\x96\xc0\xb5\xa8\x3d\x50\x54\xb9\xd9\x31\x36\x23\xc7\x67\x2b\x1a\x32\x95\x42\xdd\x43\x65\xb0\xe8\xa4\xd7\xa6\x71\x5c\x68\xe5\xec\xa4\xd4\xba\x94\x48\x1b\x61\x27\x4c\xd7\x3e\xa6\x5f\x15\xb4\x16\x72\x93\xbf\x5f\xb4\xca\xb5\xe9\xd3\x24\xb9\xf9\x26\x49\x6e\xbe\x4d\x92\x9b\x5f\x26\x49\x04\x06\x65\x1e\x05\xef\xb6\x42\x74\xd1\xb9\x94\x00\x1e\x4b\x37\x2c\x86\xe2\x77\x19\x41\x6b\xe4\x57\x9f\x16\xd2\xd7\xb3\xce\xea\x0e\x93\x53\xe5\xfd\x08\x56\x0b\x75\x8e\xd5\x93\xfa\x47\xaf\x13\x6d\xad\x48\x83\x86\x4c\x93\x64\xc7\x5d\x5f\xa7\x51\x99\x4e\x48\x1c\x77\x27\x4f\xe6\x75\x2d\xc4\xc8\xc5\x72\x3e\x62\x32\xfc\x03\xde\xbc\xbe\x9b\xf7\x00\x65\x41\x5f\xc0\x68\x89\x79\xd4\x18\xb4\xa8\x5c\xe8\xfb\xa8\x17\x97\x3c\x4a\x22\x60\x28\x65\xaf\x8a\xbb\xb1\x57\xa4\x61\xdc\x9d\x06\xd1\x33\x5f\x37\x2a\x45\xa9\xf2\x88\xa1\x57\x91\x08\x42\x58\xfd\x79\x91\x3e\x4b\x7c\xdf\x45\xf3\x5d\x75\x32\x67\xf6\x03\x3f\xe4\xc3\x03\x63\x05\xf3\x0f\xf9\x9a\x05\x91\x0d\x23\xaf\x8c\xa3\x1d\xc4\xb4\x12\x53\x5c\x53\xe6\xe4\x66\x6f\xff\xa0\x34\x5c\x2c\x07\xdb\xbd\x56\x25\xcd\xba\x93\xcb\xbd\xb4\x0c\x01\x5e\x80\xe5\x3f\x61\xd1\xfb\x38\x8c\x77\x5f\xba\xd9\x09\x42\x7b\x9c\xe7\x99\x0b\x55\xf3\xa8\x8c\xa0\x08\x52\x1d\x1e\x4a\xbb\x67\x66\x4b\x34\x4e\x30\x2a\xfb\x59\xa7\x9b\x19\x17\x06\x59\x50\x72\xe9\xcc\x11\x5a\xc3\x81\xe6\x55\x0f\xfa\x04\xbf\x28\x21\x8e\x33\x38\x13\xef\x59\x42\x9c\x14\x8c\xf9\xc3\x3b\x8f\x4e\xbb\xe1\x44\xcb\xa2\x0b\xbe\x86\xb3\x4a\xa8\xc0\x99\xee\xc4\x7a\x0c\x30\x7f\x80\xcd\x46\x90\x4b\x2c\xdc\x41\xfd\x3e\x85\x1c\x7d\xa3\x78\x43\x1f\x50\xf8\x95\x36\x9c\xac\x0c\x6d\xd2\x85\x41\x7a\x4f\xfc\xf8\x91\xd2\x4e\x7d\x69\x6f\xbf\xf5\x60\x1e\xf1\xeb\x33\x70\xf9\xd1\x8b\x4b\xbf\xd0\x3f\x12\x02\xfa\xe9\xf4\xee\xb1\xbd\xed\x89\xe9\x6f\x36\x54\xba\x3c\x8a\x20\x5c\x99\xfd\x8f\xae\xcb\xf3\xc8\x77\x6b\x04\xd6\xb0\xfd\xf1\xc2\x34\xdf\x54\xba\xb5\x38\x61\x3a\xe6\x58\xeb\x98\xf2\x25\x55\x0c\x39\xb1\x48\x0d\xab\x48\xa1\x4d\x1d\x8b\xba\x8c\x19\x27\x52\x97\x7a\x62\x97\xe5\x51\x6a\x69\xb8\xfc\xf4\xd9\x18\xca\x45\x6b\x43\x32\x03\x71\x3a\xc6\x0c\x37\xa8\xb0\xf9\xf8\xfe\x14\x26\x47\x34\xe9\xa5\x2b\xe8\xcb\xbe\xee\xb7\x1e\x85\xd8\x71\xff\x61\xfc\x47\x07\x48\x1c\x4a\x34\x5e\xf9\x1c\x44\x98\x67\xcd\xa9\x1a\x4d\xbd\x7a\x1e\xe9\x5f\x9f\xb8\xd3\x8d\x5f\x06\xab\xa5\xe0\xf0\x84\x73\x7e\xc4\xfb\xb8\x39\xa3\x1b\x17\xe8\xf5\x28\x13\x7e\xba\x88\x7e\x7c\xd8\xe3\xc3\xe9\x18\xd7\xe1\x7c\x99\x1d\x9c\x36\xb3\x68\xfe\xaf\x7f\x1e\x54\xa9\xab\xce\x58\x9c\x3e\x6f\xa5\x06\xa4\xbc\xd6\x44\x07\xca\xb7\x83\x82\xb5\xc6\x6a\xd3\xf1\x89\x69\xa9\x4d\xfa\x24\x09\x7f\x9d\xf5\xee\xe6\x92\x76\x37\x97\x1b\xf8\x3d\xca\x25\x7a\x19\xbc\x81\x97\x46\x50\x79\x03\x96\x2a\x4b\x2c\x1a\x51\x8c\xb5\xee\xb6\x59\x1f\xe4\x7e\x7b\x7b\x46\xfc\xa2\xf9\x5f\x75\x0b\xfe\xcd\xc6\xbf\x25\xaa\x12\x39\x6c\x74\x6b\xa0\xa1\xd6\xfa\xfc\xa0\xd0\xa6\x9b\xa1\x8c\xe9\x56\x39\xa0\x0e\xb6\x5b\x98\x84\x37\x57\xb5\xf9\x9e\xd6\x08\x0f\x0f\xd7\x59\x1c\xae\x22\xff\x5b\xd0\xbd\x29\x3c\x34\xc0\x05\x57\x3f\x1f\xf0\x3b\x82\xcf\x8f\x2c\xca\x62\x02\x6f\x25\x52\x8b\xc0\x2a\x64\xf7\xb0\xaa\x34\x54\xd4\x7a\x50\xd1\x5a\x70\xba\x7b\x0c\x6b\x2a\xe4\x0e\x69\x51\x87\x8b\xa5\x43\xb9\x09\x17\xca\xb3\x0e\xce\x96\x63\xf2\x45\xca\xf1\x7f\xcd\xf9\xef\xd6\x1c\x4a\xe9\x27\x75\x4d\xf2\x61\x5d\xf3\xae\x12\xb6\x67\xfa\xca\xb7\x40\xeb\x74\x4d\xc3\xb5\xce\xbf\x3f\xa1\x72\xbe\x1d\x3c\xa7\x5f\x87\x3d\x0f\x0f\x13\x38\x6c\x34\x83\xa5\xb0\x0e\x4d\xc7\xfd\x23\xea\x77\x5a\x26\x4a\xa5\x0d\x82\xf3\xae\x6a\xb4\x96\x96\x38\x81\x77\x15\xee\x7a\x8b\x51\x05\x4a\x3b\x58\x20\xb4\x16\x39\xac\x84\xab\x74\xeb\xc0\x55\x08\x4c\xab\x42\x98\x3a\x90\xee\xb4\x93\x4e\xce\xf5\xcb\xef\x60\x27\x65\x3f\x77\x1d\xfe\xc2\xd6\xbd\x8d\xab\x2c\xee\xde\x1a\xb3\xf0\x4f\xc1\xf9\xbf\x03\x00\x00\xff\xff\xfd\x3e\xb0\xdb\x5b\x15\x00\x00")

func templatesPasswordChangedHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesPasswordChangedHtml,
		"templates/password-changed.html",
	)
}

func templatesPasswordChangedHtml() (*asset, error) {
	bytes, err := templatesPasswordChangedHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/password-changed.html", size: 5467, mode: os.FileMode(420), modTime: time.Unix(1498506787, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTestEmailTemplateHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x5f\x6e\xe3\x20\x10\xc6\xdf\x7d\x8a\x11\xef\xeb\x59\x29\x0f\x2b\x65\x6d\xa4\xd5\xaa\xbd\x40\x73\x01\xc2\xd0\x42\xcb\x1f\x0b\xa6\x51\xd3\xc8\x77\xaf\x6c\x92\xc6\x89\x9a\xf0\xc4\xcc\x7c\xf3\xe3\x83\xa1\xb3\x1c\xbc\x6c\x1a\x00\x80\xce\x1a\x45\x72\xde\xce\x21\x3b\xf6\x46\x6e\x4c\x61\x78\x08\xca\x79\xf8\x47\x6a\x60\x93\x3b\xac\x95\xa6\x39\x6b\xbd\x8b\x6f\x90\x8d\xef\x45\xe1\xbd\x37\xc5\x1a\xc3\x02\x6c\x36\xcf\xbd\xb0\xcc\x43\x59\x23\x06\xf5\xa1\x29\xb6\xdb\x94\xb8\x70\x56\xc3\x14\xe8\x14\xf0\x3b\x81\xab\x76\xd5\xfe\x41\x5d\xca\x39\xd7\x06\x17\x5b\x5d\x8a\x98\x8e\xab\x36\xb1\xfa\xac\xc1\x36\xd1\x5e\x2e\x8c\x90\xdb\x81\xf6\xaa\x94\x5e\xe8\x14\x59\xb9\x68\xb2\x80\xd9\x54\x2f\x06\x45\xe4\xe2\xcb\x1a\x56\xd9\x04\xf8\xfd\x57\x9c\x6f\x5b\x9b\xfd\xa9\x97\xfc\x2f\x9b\xb2\xfb\x9c\x10\x5e\x48\xb8\xd0\x55\x2d\xcb\xc7\x9c\x42\x87\xc4\xf2\x87\x2a\xc9\xc3\x01\xda\x49\x01\xe3\xd8\x21\xd1\xc2\xe4\x92\xb1\x49\x95\x70\x13\xb1\x49\xf7\x01\x4f\xef\xdb\x57\xa3\xf9\xbe\x8f\xa3\xe8\x36\xe9\xf2\x1d\x90\xfc\x95\xa6\xb3\x19\xe5\xb5\x6e\x5a\x13\xfd\x7f\x8a\x6c\x22\x8f\xe3\x75\x0b\xe0\x72\x34\x48\x6e\x77\x1a\x1b\x1e\xe7\xd6\xe1\xfc\x01\xbf\x02\x00\x00\xff\xff\x42\x00\xc1\x0e\x87\x02\x00\x00")

func templatesTestEmailTemplateHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesTestEmailTemplateHtml,
		"templates/test-email-template.html",
	)
}

func templatesTestEmailTemplateHtml() (*asset, error) {
	bytes, err := templatesTestEmailTemplateHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/test-email-template.html", size: 647, mode: os.FileMode(420), modTime: time.Unix(1498505148, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/confirm-de.html": templatesConfirmDeHtml,
	"templates/confirm-en.html": templatesConfirmEnHtml,
	"templates/confirm.html": templatesConfirmHtml,
	"templates/forgot-password-de.html": templatesForgotPasswordDeHtml,
	"templates/forgot-password-en.html": templatesForgotPasswordEnHtml,
	"templates/forgot-password.html": templatesForgotPasswordHtml,
	"templates/password-changed.html": templatesPasswordChangedHtml,
	"templates/test-email-template.html": templatesTestEmailTemplateHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"confirm-de.html": &bintree{templatesConfirmDeHtml, map[string]*bintree{}},
		"confirm-en.html": &bintree{templatesConfirmEnHtml, map[string]*bintree{}},
		"confirm.html": &bintree{templatesConfirmHtml, map[string]*bintree{}},
		"forgot-password-de.html": &bintree{templatesForgotPasswordDeHtml, map[string]*bintree{}},
		"forgot-password-en.html": &bintree{templatesForgotPasswordEnHtml, map[string]*bintree{}},
		"forgot-password.html": &bintree{templatesForgotPasswordHtml, map[string]*bintree{}},
		"password-changed.html": &bintree{templatesPasswordChangedHtml, map[string]*bintree{}},
		"test-email-template.html": &bintree{templatesTestEmailTemplateHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

