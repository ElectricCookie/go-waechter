// Code generated by go-bindata.
// sources:
// templates/confirm-de.html
// templates/confirm-en.html
// templates/confirm.html
// templates/forgot-password-de.html
// templates/forgot-password-en.html
// templates/forgot-password.html
// templates/password-changed.html
// templates/test-email-template.html
// DO NOT EDIT!

package waechter

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesConfirmDeHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xcd\x8a\xd4\x40\x14\x85\xf7\x03\xf3\x0e\x87\x59\xb7\xfd\x0a\x32\xa3\x2e\xc4\x9f\x85\x22\xbd\xae\x24\xa7\x92\x4b\x55\xdd\x92\x5b\x37\x03\x76\xc8\x6b\xb9\x9a\x5d\xbf\x98\x74\x66\x9a\x56\x41\x97\x81\x9c\xef\x7e\xf5\x2d\x0b\x06\x46\x51\xe2\xce\xc5\x33\xef\xb0\xae\xb7\x37\x00\x70\x90\x9c\x53\x2d\x85\x8a\x65\xc1\xfe\x5b\xa3\x69\x28\xc4\xba\xee\x6e\x6f\x96\x05\xd4\x61\xfb\x77\xfb\xb8\x30\xfa\xaa\x51\xac\x3c\xcc\xee\x55\xaf\xac\x77\xaf\x3e\x05\xc9\x78\xa4\x49\x94\xa3\xd0\xa8\xff\x65\x38\xd5\xaf\xeb\x21\x68\x22\xe2\xe9\xc9\xf0\x7e\x32\xe2\x0b\x47\x69\x6e\x42\x9b\x75\x44\x47\xd9\x04\xdf\xd4\xf2\x3d\xe8\x8f\x03\xbb\x26\x7e\xd6\xdc\xe3\x41\xdc\x89\x58\xf3\x48\xc5\x57\x21\x06\x16\xcc\x67\x3a\x9a\x73\xa2\x0e\x54\x7c\x14\x4d\x3b\xcc\xe5\xcc\xc6\x87\xaa\x5e\x11\x8d\x72\x9c\x5b\x3f\x85\xec\xd4\xfd\xbf\x55\x63\xad\x4e\xbb\x9a\x7e\x96\x7e\xf2\xbf\x73\xbd\xc6\x81\xfa\x72\x5f\xd8\x78\xa9\x21\x66\x7e\x7a\x2a\x59\xfa\x09\xb4\xe7\x5b\x98\x42\x47\xdd\x21\x9d\x7e\xaa\xf2\xf7\x11\x45\x63\xe8\x27\xc8\xa8\xd5\xb6\x82\x7b\xbc\xa5\x81\xd6\x9c\x39\x3b\x71\xdf\xf7\x75\x56\x87\x34\x87\x6e\x22\x1d\x75\xf6\x63\x17\x6c\x87\x56\x73\xd0\x91\x68\x5b\x05\xc5\x7d\x72\x79\x7c\x2e\xd8\xb2\x68\x7a\x59\x04\x4d\x59\xfa\xf4\xe7\xa3\x7f\x05\x00\x00\xff\xff\xec\x14\xda\x12\x24\x02\x00\x00")

func templatesConfirmDeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesConfirmDeHtml,
		"templates/confirm-de.html",
	)
}

func templatesConfirmDeHtml() (*asset, error) {
	bytes, err := templatesConfirmDeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/confirm-de.html", size: 548, mode: os.FileMode(438), modTime: time.Unix(1497728645, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConfirmEnHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\x3f\x4b\x03\x41\x10\xc5\xfb\x40\xbe\xc3\x33\x82\x95\xa4\xb1\x11\x2c\x04\x05\xc1\x26\x95\x7f\xea\xcd\xdd\x6c\x6e\xc8\xee\x4c\xd8\x9d\x33\x1c\xcb\x7e\x77\x71\x25\x09\x09\x5a\x0e\xcc\xef\xf1\x7b\xaf\x14\xf4\xe4\x59\x08\x0b\x63\x0b\xb4\x40\xad\xf3\x19\x00\x7c\x52\xe8\x34\x12\x4a\xc1\xf2\x3d\x53\x12\x17\xa9\xd6\xdb\xf9\xac\x14\x90\xf4\xed\xaf\x1d\x07\xbe\x53\xf1\x9c\xe2\xd3\x68\xa6\x72\xca\xf9\xa0\xc4\x7e\x02\x45\xc7\xe1\x02\xbe\xc4\x8d\xc4\x4e\xa0\x0d\x4e\xb6\x19\x5e\x13\x12\x6d\x38\x1b\x25\x96\x0d\x9c\x35\xa5\x67\x8d\x3b\x27\xd3\xca\x45\x42\xad\x57\x78\xd1\x10\x74\x0f\x1b\x08\x81\x65\x8b\x35\xb5\x53\xe1\x3a\xe3\x2f\x67\x84\x49\xc7\x04\xd7\x75\x3a\x8a\x2d\xff\xaf\xe1\x55\x8d\xd2\x49\x63\xa5\x76\xb6\x01\x6a\x7d\xc4\xab\xff\x89\x43\xcf\xbd\xdc\x5c\xdf\xdd\x3f\x1c\x0d\xff\xd6\x6b\xcf\x9d\x13\x64\x8e\xbb\x30\x81\x37\xa2\x89\x60\x03\xe7\xdf\x61\x96\x78\x1b\xe8\x20\x87\x3d\x87\x00\x51\xc3\x9a\x30\x66\xb7\x0e\x84\x51\x02\xe5\xdc\x72\x8e\x85\xf8\xac\xc6\x77\x00\x00\x00\xff\xff\xb1\xbf\x76\xf6\xca\x01\x00\x00")

func templatesConfirmEnHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesConfirmEnHtml,
		"templates/confirm-en.html",
	)
}

func templatesConfirmEnHtml() (*asset, error) {
	bytes, err := templatesConfirmEnHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/confirm-en.html", size: 458, mode: os.FileMode(438), modTime: time.Unix(1497612599, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesConfirmHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\x6d\x8f\x1b\xb7\x11\xfe\x7e\xbf\x62\x8e\x46\x80\xa4\xd0\x6a\x57\x72\xe2\xe4\xf6\xad\x76\x5c\xb7\x31\x90\xb6\x46\x6a\x03\x05\x02\xa3\xa0\x96\xb3\x12\x73\x5c\x72\x4b\x72\xf5\x52\xf5\xfe\x4b\x7f\x4b\x7f\x59\x41\xee\xae\xb4\x7a\xbb\x9c\x9d\x73\xf3\x25\xf7\xe1\x24\xbe\xcd\x3c\x33\xf3\xf0\x19\x2a\xbd\x66\xaa\xb0\x9b\x1a\x61\x61\x2b\x91\x5f\xa5\xee\x03\xd6\x95\x90\x26\x23\x0b\x6b\xeb\x38\x0c\x57\xab\xd5\x78\xf5\x74\xac\xf4\x3c\x9c\xdc\xdc\xdc\x84\x6b\xb7\x87\xb4\x9b\xe2\x65\x46\x1a\x2d\x63\x53\x2c\xb0\xa2\x26\xa8\x78\xa1\x95\x51\xa5\x0d\x0a\x55\xc5\xcb\xfd\x3e\x75\xdf\x3e\x55\x96\xbc\xc0\xee\x83\x38\x14\x48\x59\x7e\x05\x90\x5a\x6e\x05\xe6\x69\xd8\x7e\xba\x99\xeb\x20\xf8\x91\x97\x70\x5d\x19\xf5\x3e\x77\x23\x08\x02\xbf\x50\xa1\xa5\xe0\x20\x07\xf8\xcf\x86\x2f\x33\xf2\xf7\xe0\xdd\x8b\xe0\xa5\xaa\x6a\x6a\xf9\x4c\x20\x81\x42\x49\x8b\xd2\x66\xe4\xf5\xab\x0c\xd9\xdc\x79\x6a\x0d\xa6\xd7\x3f\xa2\x64\xbc\x7c\xef\x4c\x9d\x1a\x7a\xd9\x9e\x0b\xde\x6e\xea\xa1\x15\x8b\x6b\x1b\xba\x5c\x24\x50\x2c\xa8\x36\x68\xb3\x77\x6f\xff\x18\x7c\x43\x7a\x1b\x92\x56\x98\x91\x25\xc7\x55\xad\xb4\x1d\x9c\x5c\x71\x66\x17\x19\xc3\x25\x2f\x30\xf0\x83\x11\x70\xc9\x2d\xa7\x22\x30\x05\x15\x98\x4d\xc6\x91\x33\x63\xec\x46\x20\xb8\xfa\x74\xee\x0a\x63\x3c\xea\x27\xaa\xb1\x42\xa9\x5b\xa0\xb0\x85\x9a\x32\xc6\xe5\x3c\x86\x28\x81\xbb\x2b\x80\xf1\x0f\x48\xd9\x9f\xcd\xfc\x5b\xc5\x36\xb0\x05\xef\x20\x86\x49\x14\x7d\xd6\xad\xbf\x5a\x5b\xd4\x92\x8a\x97\x82\x1a\xf3\x80\x1d\xbf\x83\x2d\x08\x2e\x31\x58\x20\x9f\x2f\x6c\xbc\xdf\x38\x6b\x5d\x54\x54\xcf\xb9\xf4\x00\x86\x60\x82\x15\xce\x6e\xb9\x0d\x1c\xf4\xc0\xf0\x7f\x61\x40\xd9\x4f\x8d\xb1\xbd\xab\xa0\x32\x17\xd7\x9c\x75\x4b\x67\x02\x47\x60\x19\x6c\x61\xa6\x34\x43\x1d\x14\x4a\x08\x5a\x1b\x8c\xfb\x2f\x09\x54\x46\x05\x7e\x67\x20\x4c\x4d\x0b\x8c\x21\xaa\xed\x70\x5a\x0f\xa7\x9d\x5d\x5e\xcd\x77\x16\x3d\xd0\x2e\x2e\xa0\x8d\x55\xc9\x41\xa8\x1d\x1a\x97\x6e\x2e\x31\x06\xa9\x24\x26\xe0\x41\x33\x2c\x94\xa6\x96\x2b\xd9\x4f\xbb\x78\xb8\xb4\xa8\x6b\x25\xfc\x42\x50\x29\x86\x31\xcc\x78\xd1\xcc\x78\xd1\x3a\xaf\x61\x0b\x8c\x9b\x5a\xd0\x4d\x0c\x33\xa1\x8a\xdb\x64\x97\xbf\xc9\xd3\x7a\xdd\x56\x31\x0d\x7d\xed\xf3\xab\x53\xc2\xdf\xc7\x8b\xe7\x15\x32\x4e\x41\x49\xb1\x01\x53\x68\x44\x09\x54\x32\xf8\xbc\xa2\xeb\x96\x68\xf1\x97\xdf\x44\xf5\xfa\x0b\xd8\x5e\x01\x00\x3c\x77\x88\x7b\x82\xee\x88\xf0\x74\x1a\xd5\xeb\x16\x2c\xc0\xf3\xfb\x96\x8f\x70\x1e\xde\xa3\x0e\xb8\xc7\x7d\x95\xae\x9d\xbc\x00\xa4\x2a\xfe\xab\xbf\xe6\x7f\x50\x45\x53\xa1\xb4\x7f\x43\x6b\xb9\x9c\x9b\xdc\x7b\x4b\x55\xfc\x42\x08\xb5\x7a\xf3\x97\x3f\x85\xbb\x99\x37\x7c\x8d\xc2\xbc\x41\xfd\x5a\x16\x8b\xfc\xe6\x59\x1a\x1e\xcf\x39\xc3\xe1\x65\xcb\x69\xe8\xbd\x9f\x85\x27\x2c\x3a\x88\x30\x99\xbc\xbf\x2f\xb1\xe3\xee\xc2\x05\x73\xad\x9a\x3a\x28\xf9\xba\x4b\x61\x9b\x13\xc7\x12\xb8\xe6\x95\x4b\x14\x95\x36\x39\xce\xcd\xc0\xf1\xd9\x8a\xfa\x48\x05\x97\xb7\xb0\xd0\x58\xb6\xd2\x6b\xe2\x30\x2c\x95\xb4\x66\x3c\x57\x6a\x2e\x90\xd6\xdc\x8c\x0b\x55\x39\x4c\xbf\x2f\x69\xc5\xc5\x26\x7b\x37\x6b\xa4\x6d\xe2\xa7\x51\x34\xfa\x32\x8a\x46\x5f\x45\xd1\xe8\xeb\x28\x22\xa0\x51\x64\xc4\x7b\x37\x0b\x44\x4b\xce\x85\x04\x70\x29\x5c\xbf\xe8\x8b\xdf\x46\x04\x8d\x16\x9f\xff\x32\x48\x5f\x24\xad\xd5\x5d\x4e\x4e\x95\xf7\x23\x58\xcd\xe5\x39\x56\x8f\xab\x9f\x9c\x4e\x34\x95\x0c\x6a\xd4\xc1\x24\x8a\x76\xdc\x75\x75\x1a\x94\xe9\x84\xc4\x61\xdb\x79\x52\xaf\x6b\x7e\x32\x23\x33\x5a\xdc\xba\xaa\x4b\x16\xc3\x93\xb2\x2c\x13\x8f\xc9\x05\xc0\xf8\x12\x0a\xa7\x90\x19\xf1\x2e\xa5\xa5\x5c\xa2\x26\xa7\x27\x1d\x1e\xa5\xe3\xee\xf8\xe0\x6a\xc0\xbf\xe1\xf5\xab\xf7\x79\x97\xf1\xd4\x0b\x16\x68\xe5\x4e\xd7\x1a\x0d\x4a\xeb\x85\x84\x74\x6a\x95\x91\x88\x40\x81\x42\x74\x32\xbb\x1b\x3b\x89\xeb\xc7\x6d\x7b\x21\xcf\x1c\x11\xa8\xe0\x73\x99\x91\x02\x9d\x2c\xed\x80\xb5\xc9\x78\x16\xb9\x8b\x4c\xf2\x5d\xb9\x53\xab\xf7\x03\x37\x64\xfd\x81\xa1\x24\xba\x43\x8e\x04\x5e\xb5\xfd\xc8\x49\xed\x60\x47\xa0\x1b\x81\x31\xae\x69\x61\xc5\x66\x6f\xff\xa0\xd6\x2e\x75\x9d\xed\x4e\xfc\xa2\x7a\xdd\xea\xef\x5e\xab\x7a\x80\xf7\xa4\xe5\xe7\x72\xd1\xf9\x38\xc4\xbb\xe7\x42\x72\x92\xa1\x7d\x9e\xf3\xd4\x3a\x1a\xe4\x2e\x2b\x83\x54\x78\xed\xf7\x87\xe2\xf6\x4c\xb2\x44\x6d\x79\x41\x45\x37\x6b\x55\x9d\x30\xae\xb1\xf0\xad\x41\x58\x7d\x94\xad\xbe\x43\x3a\x19\x85\x2e\xc0\x4f\x4a\x88\x87\x14\xf8\x4c\x0c\x67\x49\x72\x52\xc4\x21\xff\x0f\xae\xdc\x89\x60\x92\x7b\x7c\xf5\x0d\x91\x4b\xcf\xa3\xb6\x2d\x5e\x4a\xa2\xeb\x92\xc9\xa0\x0c\x02\x4b\x7b\x50\xd3\x5f\x42\x98\xee\xf2\x38\x43\x0f\x20\xc3\x4a\x69\x16\xac\x34\xad\xe3\x99\x46\x7a\x1b\xb8\xf1\x85\x72\x4f\x5c\xb9\xa7\x5f\xb9\x64\x1e\x71\xee\x11\xf8\x7d\xf1\x75\xd4\x2d\x74\x47\x3c\xa0\x0f\xa7\x7c\x97\xdb\x69\x47\x56\xf7\x7c\xa2\xc2\x66\x84\x80\x7f\x97\xbb\x2f\xed\xcd\xcf\x88\xbb\xc1\x04\x8c\x2e\x32\xb2\xdd\xc2\xf8\x7b\x35\x57\xef\x7e\xf8\x1e\xee\xee\x8e\xa0\xc6\xfe\xc5\xd4\xa1\xd3\x94\xf1\xc6\x78\x70\x3d\x11\x5a\x06\x1c\xd5\xbc\x7f\x85\xf9\xb3\xc7\x6f\x30\x3f\x39\x60\x41\xa7\x56\x5e\x52\xf6\x65\x9d\xba\x20\x43\xcb\xdc\x3f\xed\xfe\xb5\xf1\x86\xbe\x02\xc3\x95\xc7\xa8\x73\x9e\xd6\xa7\x02\x34\x71\x82\x79\x24\x79\x5d\x1e\xac\xaa\xdd\x32\x18\x25\x38\x83\x27\x8c\xb1\x23\x5a\x87\xf5\x19\xa9\xb8\x87\x3d\x17\x0b\xfd\xe1\xba\xf9\xf1\xb0\x87\xfd\xe8\x38\xaf\x7d\x4b\x49\x0e\x1a\x4c\x42\xf2\xff\xfe\xe7\xa0\x4a\x6d\x75\x86\xda\xf3\xb8\x95\xea\x33\xe5\xa4\x84\x1c\x74\xa7\xa2\xd1\x46\xe9\x96\x46\x5d\x13\xa7\x94\xb6\x16\xdb\x17\x4f\xbc\x40\xb1\x44\xa7\x68\x03\x3f\xfe\xae\x0c\x83\x9a\x4e\xcf\x88\x16\xc9\xb7\x5b\x00\x8b\x55\x2d\xa8\x45\x20\xfe\x3a\x11\x18\xc3\xdd\x5d\x1a\x32\xbe\xfc\x55\xc3\x8c\xfc\xdf\x41\xa4\xed\xdb\x6e\x04\xdf\xf5\x11\x8f\xe0\x85\xe6\x54\x8c\xc0\x50\x69\x02\x83\x9a\x97\xc3\x4b\x3b\x7d\x70\x12\xf6\x39\xe8\x7e\x25\xff\x1f\xb2\xf0\xe9\xe4\xd7\x60\x4d\x35\xb5\xf8\x11\x5a\x7b\x59\x1e\x9d\x02\xb6\xa5\x59\x2d\xb8\xc5\x64\x58\xb2\x9f\x8f\x12\x96\xdd\xb8\xe2\x8c\x39\x92\xcd\xe6\xde\x58\x46\x9e\x4c\x6e\xe8\xe4\xe6\x6b\x92\xa7\xb4\xfb\xf5\xe1\x94\xfb\xa5\x92\x25\xd7\xd5\xb7\x8d\xb5\x4a\xbe\xa5\x7a\x8e\x76\xa8\xe2\x67\xd5\x77\xf0\x52\xee\x8c\x1e\x00\x1e\x32\xe9\xbb\x33\x77\xc6\x6b\xbc\x1f\xae\x5a\xba\x48\xa5\x2b\x2a\x0e\x18\x34\x99\x46\x9f\xb5\x0c\xb2\x9a\x4a\x53\x2a\x5d\xb5\xbe\xf7\xda\x94\x10\xb0\x1e\x6f\x46\xfe\x31\x13\x54\xde\x9e\x12\x6c\x1f\x59\x4f\x33\xfa\x5b\x57\xf8\xad\x2b\x3c\x6a\x57\xf8\x50\xad\x7c\x78\xc3\xd8\x53\xb9\x54\xca\x97\xf0\xac\x54\x9e\xb0\xd8\xaf\x5f\xfc\xa5\x71\x92\xd8\x73\x2f\xfe\x4f\x6c\xdd\xd9\xb8\x4a\x43\x6f\xd9\xfd\x18\xb7\x95\xc8\xff\x17\x00\x00\xff\xff\x3c\xc5\xe0\x9f\xa3\x16\x00\x00")

func templatesConfirmHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesConfirmHtml,
		"templates/confirm.html",
	)
}

func templatesConfirmHtml() (*asset, error) {
	bytes, err := templatesConfirmHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/confirm.html", size: 5795, mode: os.FileMode(438), modTime: time.Unix(1497803934, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesForgotPasswordDeHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\xc1\x6a\xeb\x30\x14\x44\xf7\x81\xfc\xc3\x90\x85\x57\x79\xfe\x81\xb7\x2a\x34\x85\x42\x0b\x85\x74\xd5\x9d\x12\x4d\x6c\x61\xfb\x0a\xa4\x2b\x52\x2c\xfc\xef\x45\x6e\x1d\x9c\x45\x96\x12\x97\x33\x33\x27\x67\x58\x5e\x9c\x10\xbb\xb3\x17\xa5\xe8\x0e\xd3\xb4\xdd\x00\xc0\xd1\x11\xad\x39\x51\xc0\x72\x70\xf8\xf7\x6e\x5c\x8f\x31\x05\x7c\xa5\x50\xa5\x34\xf4\xff\xcf\x5d\xa4\x8e\x49\x1a\xbc\xb6\x81\x11\x1f\x26\xc6\xab\x0f\x1a\x61\xa4\xe1\xc5\x07\xcb\xa0\x35\x5e\x7c\xdf\x50\x66\xa0\xe5\x80\x54\x82\x10\x95\x2d\xa5\xbc\xdf\x9c\x74\x7b\xa4\xa1\x40\x6e\x08\x8c\x09\x95\x29\x21\x62\x19\xa4\xde\x6e\x72\x06\xc5\xce\xf5\xe6\xc7\x52\xfc\x94\x54\xbd\x7c\xf2\x7b\xd5\x7d\x45\xb9\xab\x4a\x79\xcc\xb9\x78\xaf\x0c\xf7\x9c\x67\xc7\x78\x9b\x7e\x4d\xc1\x12\x46\x90\x33\xea\xc3\x50\xbe\xa6\x09\x0d\x63\x99\xa1\x35\x8e\xbe\xef\xf5\x6f\x67\x37\x3b\xab\x9e\x96\x01\xc5\x91\x7d\x60\xe8\xd7\xf2\x1e\x5d\xe5\xe7\x73\x59\x5c\xad\xc3\x5d\x23\x3e\x38\x06\x4a\x8d\xd5\x86\x9f\x00\x00\x00\xff\xff\x3c\x41\xec\x35\xc1\x01\x00\x00")

func templatesForgotPasswordDeHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesForgotPasswordDeHtml,
		"templates/forgot-password-de.html",
	)
}

func templatesForgotPasswordDeHtml() (*asset, error) {
	bytes, err := templatesForgotPasswordDeHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/forgot-password-de.html", size: 449, mode: os.FileMode(438), modTime: time.Unix(1497612599, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesForgotPasswordEnHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8f\x31\x4f\xc3\x30\x10\x85\xf7\x4a\xfd\x0f\x4f\x45\x62\x42\x5d\x98\x80\x99\x81\x15\x75\x61\x74\xe3\x8b\x63\xe1\xdc\x15\xdf\x59\x21\xb2\xf2\xdf\x51\x2c\x88\xda\x81\xcd\xcf\xb6\xde\xfb\xbe\x5a\xe1\xa9\x8f\x4c\x38\x74\xc2\x46\x6c\x07\x2c\xcb\x7e\x07\x00\x1f\x52\x60\x92\x3c\x8a\x62\x96\x82\x5e\x72\x10\x5b\x8f\x19\x17\xa7\x3a\x49\xf6\x47\xbc\xf5\xed\x31\x93\x4b\x69\x86\x8f\xbe\xc5\xce\x31\xba\xc1\x71\x20\x44\x43\xd1\xc8\x01\x36\x10\x52\xe4\x4f\x9c\x29\xc9\xf4\xbc\xdf\xd5\x0a\x62\xdf\xf6\x5a\xf8\x23\x39\x17\x33\xe1\x13\x7d\x5f\xc1\xbc\x93\x9a\x64\xc2\x38\x6f\xdb\xff\x17\xf4\x22\x46\xf9\xb6\xe0\x34\x44\x05\x8d\x2e\x26\x4c\x4e\xa1\xc4\x06\x13\xd4\x8a\xe3\x6b\xbb\x5d\x96\x4d\xc6\x47\xcf\xf7\x77\x8f\x4f\x2f\x86\x4c\x5f\x85\xb4\x7d\xfd\xf5\xb9\xf1\x7f\xd8\x6c\x35\x8e\x97\x34\x23\x06\x5e\x31\x6d\x5d\x1b\x49\xd5\x05\x3a\x5e\x81\xfe\x04\x00\x00\xff\xff\x0d\xc7\x30\xbe\x70\x01\x00\x00")

func templatesForgotPasswordEnHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesForgotPasswordEnHtml,
		"templates/forgot-password-en.html",
	)
}

func templatesForgotPasswordEnHtml() (*asset, error) {
	bytes, err := templatesForgotPasswordEnHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/forgot-password-en.html", size: 368, mode: os.FileMode(438), modTime: time.Unix(1497612599, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesForgotPasswordHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\xd9\x6e\x1b\xbd\x15\xbe\xf7\x53\x1c\xd3\xf8\x81\x3f\x85\x46\x33\x92\xb3\x79\x16\x35\x69\x9a\xb6\x01\xba\x04\x6d\x0c\x14\x08\x7c\x41\x0d\xcf\x48\x8c\x39\xe4\x94\xe4\x68\xa9\xea\x77\xe9\xb3\xf4\xc9\x0a\x72\x46\xd2\x68\x73\x12\x3b\xbe\x8b\x2f\x2c\x71\x3b\xfc\xce\x77\x3e\x7e\xa4\xd2\x73\xa6\x72\xbb\xac\x10\xa6\xb6\x14\xa3\xb3\xd4\x7d\xc0\xa2\x14\xd2\x64\x64\x6a\x6d\x15\x87\xe1\x7c\x3e\xef\xcf\x2f\xfb\x4a\x4f\xc2\xc1\xd5\xd5\x55\xb8\x70\x73\x48\x33\x29\x9e\x65\xa4\xd6\x32\x36\xf9\x14\x4b\x6a\x82\x92\xe7\x5a\x19\x55\xd8\x20\x57\x65\x3c\xdb\xce\x53\xf7\xcd\x53\x45\xc1\x73\x6c\x3f\x88\x43\x81\x94\x8d\xce\x00\x52\xcb\xad\xc0\x51\x1a\x36\x9f\xae\xe7\x3c\x08\x3e\xf3\x02\xce\x4b\xa3\x6e\x46\xae\x05\x41\xe0\x07\x4a\xb4\x14\x1c\xe4\x00\xff\x55\xf3\x59\x46\xfe\x19\x5c\xbf\x0d\xde\xa9\xb2\xa2\x96\x8f\x05\x12\xc8\x95\xb4\x28\x6d\x46\x3e\xbc\xcf\x90\x4d\xdc\x4e\x4d\xc0\xf4\xfc\x33\x4a\xc6\x8b\x1b\x17\xea\x30\xd0\xbb\x66\x5d\xf0\x69\x59\x75\xa3\x58\x5c\xd8\xd0\x71\x91\x40\x3e\xa5\xda\xa0\xcd\xae\x3f\xfd\x21\x78\x4d\xd6\x31\x24\x2d\x31\x23\x33\x8e\xf3\x4a\x69\xdb\x59\x39\xe7\xcc\x4e\x33\x86\x33\x9e\x63\xe0\x1b\x3d\xe0\x92\x5b\x4e\x45\x60\x72\x2a\x30\x1b\xf4\x23\x17\xc6\xd8\xa5\x40\x70\xf5\x69\xb7\xcb\x8d\xf1\xa8\x2f\x54\x6d\x85\x52\xb7\x40\x61\x05\x15\x65\x8c\xcb\x49\x0c\x51\x02\x77\x67\x00\xfd\xbf\x23\x65\x7f\x31\x93\xdf\x29\xb6\x84\x15\xf8\x0d\x62\x18\x44\xd1\x2f\xed\xf8\xfb\x85\x45\x2d\xa9\x78\x27\xa8\x31\xdf\x30\xe3\x37\xb0\x02\xc1\x25\x06\x53\xe4\x93\xa9\x8d\xb7\x13\xc7\xcd\x16\x25\xd5\x13\x2e\x3d\x80\x2e\x98\x60\x8e\xe3\x5b\x6e\x03\x07\x3d\x30\xfc\xdf\x18\x50\xf6\xa5\x36\x76\xbd\x55\x50\x9a\x93\x63\x2e\xba\xa5\x63\x81\x3d\xb0\x0c\x56\x30\x56\x9a\xa1\x0e\x72\x25\x04\xad\x0c\xc6\xeb\x2f\x09\x94\x46\x05\x7e\x66\x20\x4c\x45\x73\x8c\x21\xaa\x6c\xb7\x5b\x77\xbb\x5d\x5c\x5e\x4e\x36\x11\x3d\xd0\x36\x2f\xa0\xb5\x55\xc9\x4e\xaa\x2d\x1a\x47\x37\x97\x18\x83\x54\x12\x13\xf0\xa0\x19\xe6\x4a\x53\xcb\x95\x5c\x77\xbb\x7c\xb8\xb4\xa8\x2b\x25\xfc\x40\x50\x2a\x86\x31\x8c\x79\x5e\x8f\x79\xde\x6c\x5e\xc1\x0a\x18\x37\x95\xa0\xcb\x18\xc6\x42\xe5\xb7\xc9\x86\xbf\xc1\x65\xb5\x68\xaa\x98\x86\xbe\xf6\xa3\xb3\x43\xc1\xdf\xa7\x8b\x37\x25\x32\x4e\x41\x49\xb1\x04\x93\x6b\x44\x09\x54\x32\xf8\xb5\xa4\x8b\x46\x68\xf1\xf3\xd7\x51\xb5\x78\x06\xab\x33\x00\x80\x37\x0e\xf1\x5a\xa0\x1b\x21\x5c\x0e\xa3\x6a\xd1\x80\x05\x78\x73\xdf\xf0\x1e\xce\xdd\x73\xd4\x02\xf7\xb8\xcf\xd2\x85\xb3\x17\x80\x54\xc5\x7f\xf3\xc7\xfc\xf7\x2a\xaf\x4b\x94\xf6\x1f\x68\x2d\x97\x13\x33\xf2\xbb\xa5\x2a\x7e\x2b\x84\x9a\x7f\xfc\xeb\x1f\xc3\x4d\xcf\x47\xbe\x40\x61\x3e\xa2\xfe\x20\xf3\xe9\xe8\xea\x65\x1a\xee\xf7\xb9\xc0\xe1\xe9\xc8\x69\xe8\x77\x3f\x0a\x4f\x58\x74\x10\x61\x30\xb8\xb9\x8f\xd8\x7e\x7b\xe0\x82\x89\x56\x75\x15\x14\x7c\xd1\x52\xd8\x70\xe2\x54\x02\xe7\xbc\x74\x44\x51\x69\x93\x7d\x6e\x3a\x1b\x1f\xad\xa8\xcf\x54\x70\x79\x0b\x53\x8d\x45\x63\xbd\x26\x0e\xc3\x42\x49\x6b\xfa\x13\xa5\x26\x02\x69\xc5\x4d\x3f\x57\xa5\xc3\xf4\xdb\x82\x96\x5c\x2c\xb3\xeb\x71\x2d\x6d\x1d\x5f\x46\x51\xef\x79\x14\xf5\x5e\x44\x51\xef\x55\x14\x11\xd0\x28\x32\xe2\x77\x37\x53\x44\x4b\x8e\xa5\x04\x70\x2a\x5d\x3f\xe8\x8b\xdf\x64\x04\xb5\x16\xbf\x3e\x0e\xd2\xb3\xa4\x89\xba\xe1\xe4\xd0\x79\x1f\xa0\x6a\x2e\x8f\xa9\xba\x5f\x7e\x71\x3e\x51\x97\x32\xa8\x50\x07\x83\x28\xda\x68\xd7\xd5\xa9\x53\xa6\x03\x11\x87\xcd\xcd\x93\x7a\x5f\xf3\x9d\x19\x19\xd3\xfc\xd6\x55\x5d\xb2\x18\x2e\x8a\xa2\x48\x3c\x26\x97\x00\xe3\x33\xc8\x9d\x43\x66\xc4\x6f\x29\x2d\xe5\x12\x35\x39\x5c\xe9\xf0\x28\x1d\xb7\xcb\x3b\x47\x03\xfe\x03\x1f\xde\xdf\x8c\x5a\xc6\x53\x6f\x58\xa0\x95\x5b\x5d\x69\x34\x28\xad\x37\x12\xd2\xba\x55\x46\x22\x02\x39\x0a\xd1\xda\xec\xa6\xed\x2c\x6e\xdd\x6e\xae\x17\xf2\xd2\x09\x81\x0a\x3e\x91\x19\xc9\xd1\xd9\xd2\x06\x58\x43\xc6\xcb\xc8\x1d\x64\x32\xda\x94\x3b\xb5\x7a\xdb\x70\x4d\xb6\x5e\xd0\xb5\x44\xb7\xc8\x89\xc0\xbb\xb6\x6f\x39\xab\xed\xcc\x08\x74\x2d\x30\xc6\x05\xcd\xad\x58\x6e\xe3\xef\xd4\xda\x51\xd7\xc6\x6e\xcd\x2f\xaa\x16\x8d\xff\x6e\xbd\x6a\x0d\xf0\x1e\x5a\xbe\xc6\x45\xbb\xc7\x2e\xde\xad\x16\x92\x03\x86\xb6\x3c\x8f\x52\xeb\x64\x30\x72\xac\x74\xa8\xf0\xde\xef\x17\xc5\xcd\x9a\x64\x86\xda\xf2\x9c\x8a\xb6\xd7\xaa\x2a\x61\x5c\x63\xee\xaf\x06\x61\xf5\x1e\x5b\xeb\x1b\xd2\xd9\x28\xb4\x09\x3e\xa9\x20\xbe\xa5\xc0\x47\x72\x38\x2a\x92\x83\x22\x76\xf5\xbf\x73\xe4\x0e\x0c\x93\xdc\xb3\xd7\xfa\x42\xe4\xd2\xeb\xa8\xb9\x16\x4f\x91\xe8\x6e\xc9\xa4\x53\x06\x81\x85\xdd\xa9\xe9\x63\x04\xd3\x1e\x1e\x17\xe8\x1b\xc4\x30\x57\x9a\x05\x73\x4d\xab\x78\xac\x91\xde\x06\xae\x7d\xa2\xdc\x03\x57\xee\xe1\x0b\x47\xe6\x9e\xe6\x7e\x80\xbe\x4f\xbe\x8e\xda\x81\x76\x89\x07\xf4\xfd\x92\x6f\xb9\x1d\xb6\x62\x75\xcf\x27\x2a\x6c\x46\x08\xf8\x77\xb9\xfb\xd2\x9c\xfc\x8c\xb8\x13\x4c\xc0\xe8\x3c\x23\xab\x15\xf4\xfd\xf3\x5b\x2e\xff\xac\x26\xea\x5a\x0b\xb8\xbb\xdb\x43\x1c\xfb\x87\x53\x0b\x52\x53\xc6\x6b\xe3\x31\xae\xf5\xd0\x08\x61\xaf\xf4\xeb\xc7\x98\x5f\xbb\xff\x14\xf3\x9d\x1d\x31\xb4\xa6\xe5\x9d\x65\x5b\xdd\xa1\xcb\x35\xb4\xcc\xfd\xd3\xee\x5f\x93\x76\xe8\x0b\xd1\x1d\xf9\x11\xe5\x1e\xa5\xd5\xa1\x0f\x0d\x9c\x6f\xee\x39\x5f\xcb\x83\x55\x95\x1b\x06\xa3\x04\x67\x70\xc1\x18\xdb\x53\x77\x58\x1d\x71\x8c\x7b\x44\x74\xb2\xde\xdf\x6f\x9f\x0f\x87\xdd\xbd\x96\xf6\x79\x5d\xdf\x2c\xc9\xce\x3d\x93\x90\xd1\xff\xfe\xbb\x53\xa5\xa6\x3a\x5d\x0b\xfa\xb1\x95\x5a\x33\xe5\x1c\x85\xec\x5c\x52\x79\xad\x8d\xd2\x8d\x8c\xda\xbb\x3c\xf2\x7f\x4d\xd0\xe6\xed\x13\x37\x6f\x9f\x1e\xfc\x09\xc5\x0c\x9d\xc7\xf5\xe0\xad\xe6\x54\xf4\xc0\x50\x69\x02\x83\x9a\x17\x5d\x35\x0f\xab\xc5\x4e\xca\xc3\xe1\x11\x67\x23\xa3\xd5\x0a\x2c\x96\x95\xa0\x16\x81\xb4\xbf\x22\x09\xdc\xdd\xa5\x21\xe3\xb3\xa7\xe2\xe0\xe9\xcc\xc9\x60\x45\x35\xb5\xf8\x00\x27\x3a\xed\x1a\xce\x18\x9a\xc2\xcc\xa7\xdc\x62\xd2\x2d\xd8\xd7\xb3\x84\x59\xdb\x2e\x39\x63\x02\x09\x8c\x27\x3e\x58\x46\x2e\x06\x57\x74\x70\xf5\xaa\x7b\x88\x8f\x5a\x4e\xe7\x95\xd8\x2e\xd9\x81\xd3\x55\xc9\x46\x1d\xfb\xc6\xe6\x9b\xf3\x46\x0a\x52\xe9\x92\x8a\x1d\x75\x0c\x86\xd1\x2f\x8d\x3a\xac\xa6\xd2\x14\x4a\x97\xcd\xde\xdb\x03\xb9\x2f\x96\x71\x6d\xad\x92\x9f\x70\xd1\xea\xa5\xfa\xe9\x7a\x3f\x5d\xef\x51\xae\x47\x29\x7d\x94\xe5\x45\x0f\xb0\xbc\x42\x29\x8b\x7a\xab\xe2\x3d\xd7\x3b\xd0\xb1\x1f\x3f\xf9\xa4\x3e\xa0\xf6\xd8\xd3\xf6\x89\xa3\xbb\x18\x67\x69\xe8\x23\xbb\x5f\x9d\xb6\x14\xa3\xff\x07\x00\x00\xff\xff\x36\x7f\x95\xe3\x8c\x15\x00\x00")

func templatesForgotPasswordHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesForgotPasswordHtml,
		"templates/forgot-password.html",
	)
}

func templatesForgotPasswordHtml() (*asset, error) {
	bytes, err := templatesForgotPasswordHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/forgot-password.html", size: 5516, mode: os.FileMode(438), modTime: time.Unix(1497803934, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesPasswordChangedHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\x5b\x93\xdc\x38\x15\x7e\x9f\x5f\x71\xc6\x29\x8a\x5d\x6a\xd4\x76\x4f\x76\xc3\xc6\xed\x6e\x12\x42\x80\x3c\xb0\xa4\x20\xa9\x82\xda\xca\x83\x5a\x3a\x6d\x6b\x47\x96\x8c\x24\xf7\x85\x61\xfe\x0b\xbf\x85\x5f\x46\x1d\xd9\xdd\xed\xbe\xcc\x30\x9b\xcb\x0b\x90\x87\x99\xd1\xed\x5c\xbe\xf3\x9d\x4f\x72\x8a\x4b\x69\x45\xd8\x34\x08\x55\xa8\xf5\xec\xa2\xa0\x5f\xb0\xae\xb5\xf1\xd3\xa4\x0a\xa1\xc9\xd3\x74\xb5\x5a\x8d\x56\x4f\x47\xd6\x95\xe9\xf8\xf9\xf3\xe7\xe9\x9a\xf6\x24\xdd\xa6\x7c\x39\x4d\x5a\x67\x72\x2f\x2a\xac\xb9\x67\xb5\x12\xce\x7a\xbb\x08\x4c\xd8\x3a\x5f\xee\xf7\xd9\x87\xf6\xd9\xc5\x42\x09\xec\x7f\x25\x14\x05\x72\x39\xbb\x00\x28\x82\x0a\x1a\x67\x45\xda\xfd\xa6\x99\x4b\xc6\x7e\x50\x0b\xb8\xac\xbd\xfd\x30\xa3\x11\x30\x16\x17\x6a\x0c\x1c\x28\x64\x86\x7f\x6b\xd5\x72\x9a\xfc\x85\xbd\x7f\xc9\x5e\xd9\xba\xe1\x41\xcd\x35\x26\x20\xac\x09\x68\xc2\x34\x79\xf3\x7a\x8a\xb2\x24\x4f\x9d\xc1\xe2\xf2\x07\x34\x52\x2d\x3e\x90\xa9\x53\x43\xaf\xba\x73\xec\xdd\xa6\x19\x5a\x09\xb8\x0e\x29\x61\x31\x01\x51\x71\xe7\x31\x4c\xdf\xbf\xfb\x2d\xfb\x2e\xd9\xda\x30\xbc\xc6\x69\xb2\x54\xb8\x6a\xac\x0b\x83\x93\x2b\x25\x43\x35\x95\xb8\x54\x02\x59\x1c\x5c\x81\x32\x2a\x28\xae\x99\x17\x5c\xe3\x74\x3c\xca\xc8\x8c\x0f\x1b\x8d\x40\xf5\xe9\xdd\x09\xef\x63\xd4\x4f\x6c\x1b\xb4\xb5\x37\xc0\xe1\x16\x1a\x2e\xa5\x32\x65\x0e\xd9\x04\xee\x2e\x00\x46\x7f\x42\x2e\xff\xe0\xcb\x5f\x5b\xb9\x81\x5b\x88\x0e\x72\x18\x67\xd9\xcf\xfa\xf5\xd7\xeb\x80\xce\x70\xfd\x4a\x73\xef\x1f\xb1\xe3\x17\x70\x0b\x5a\x19\x64\x15\xaa\xb2\x0a\xf9\x7e\xe3\xbc\x73\x51\x73\x57\x2a\x13\x03\x18\x06\xc3\x56\x38\xbf\x51\x81\x51\xe8\xcc\xab\xbf\x23\xe3\xf2\xc7\xd6\x87\xad\x2b\x56\xfb\x7b\xd7\xc8\x7a\xe0\x73\x8d\x57\x10\x24\xdc\xc2\xdc\x3a\x89\x8e\x09\xab\x35\x6f\x3c\xe6\xdb\x3f\x26\x50\x7b\xcb\xe2\x4e\xa6\x7d\xc3\x05\xe6\x90\x35\x61\x38\xed\x86\xd3\x64\x57\xd5\xe5\xce\x62\x0c\xb4\xcf\x0b\x78\x1b\xec\xe4\x20\xd5\x3e\x1a\x82\x5b\x19\xcc\xc1\x58\x83\x13\x88\x41\x4b\x14\xd6\xf1\xa0\xac\xd9\x4e\x53\x3e\xca\x04\x74\x8d\xd5\x71\x81\xd5\x56\x62\x0e\x73\x25\xda\xb9\x12\x9d\xf3\x06\x6e\x41\x2a\xdf\x68\xbe\xc9\x61\xae\xad\xb8\x99\xec\xf0\x1b\x3f\x6d\xd6\x5d\x15\x8b\x34\xd6\x7e\x76\x71\x4a\xf8\x87\x78\xf1\xa2\x46\xa9\x38\x58\xa3\x37\xe0\x85\x43\x34\xc0\x8d\x84\xaf\x6a\xbe\xee\x88\x96\x7f\xf3\x5d\xd6\xac\xbf\x86\xdb\x0b\x00\x80\x17\x14\xf1\x96\xa0\x3b\x22\x3c\xbd\xce\x9a\x75\x17\x2c\xc0\x8b\x87\x96\x8f\xe2\x3c\xec\xa3\x3e\xf0\x18\xf7\x45\xb1\x26\x79\x01\x28\x6c\xfe\xc7\xd8\xe6\xbf\xb1\xa2\xad\xd1\x84\x3f\x63\x08\xca\x94\x7e\x16\xbd\x15\x36\x7f\xa9\xb5\x5d\xbd\xfd\xfe\x77\xe9\x6e\xe6\xad\x5a\xa3\xf6\x6f\xd1\xbd\x31\xa2\x9a\x3d\x7f\x56\xa4\xc7\x73\x64\x38\xbd\xdf\x72\x91\x46\xef\x67\xc3\xd3\x01\x29\x44\x18\x8f\x3f\x3c\x04\xec\xa8\x6f\x38\x56\x3a\xdb\x36\x6c\xa1\xd6\x3d\x84\x1d\x26\xc4\x12\xb8\x54\x35\x01\xc5\x4d\x98\x1c\x63\x33\x70\x7c\xb6\xa2\x31\x53\xad\xcc\x0d\x54\x0e\x17\x9d\xf4\xfa\x3c\x4d\x17\xd6\x04\x3f\x2a\xad\x2d\x35\xf2\x46\xf9\x91\xb0\x35\xc5\xf4\xab\x05\xaf\x95\xde\x4c\xdf\xcf\x5b\x13\xda\xfc\x69\x96\x5d\x7d\x93\x65\x57\xdf\x66\xd9\xd5\x2f\xb3\x2c\x01\x87\x7a\x9a\x44\xef\xbe\x42\x0c\xc9\xb9\x94\x00\xee\x4b\x37\x2e\xc6\xe2\x77\x19\x41\xeb\xf4\x57\x9f\x16\xd2\xd7\x93\xce\xea\x0e\x93\x53\xe5\xfd\x08\x56\x2b\x73\x8e\xd5\xa3\xfa\x47\xd2\x89\xb6\x36\xac\x41\xc7\xc6\x59\xb6\xe3\x2e\xd5\x69\x50\xa6\x13\x12\xa7\xdd\xcd\x53\x90\xae\x91\x67\x0a\x53\xaa\x25\x08\xd2\xc1\x69\x12\x0d\x9b\xc0\x95\x41\x97\xcc\x06\x0c\x87\x7f\xc0\x9b\xd7\x1f\x66\x3d\x70\x45\xd4\x1d\x70\x56\xe3\x34\x69\x1c\x7a\x34\x21\xea\x41\xd2\x8b\xce\x34\xc9\x12\x10\xa8\x75\xaf\x96\xbb\x31\x29\xd5\x76\xdc\xdd\x12\xc9\x33\xaa\x27\xd7\xaa\x34\xd3\x44\x20\xa9\x4b\x02\x31\xdc\xfe\x1e\xc9\x9f\x65\xd4\x8f\xc9\x6c\x57\xb5\x22\xb8\xfd\x80\x86\x72\x7b\x60\xa8\x6c\x74\x88\x6a\x19\xc5\x37\x8e\x48\x31\x07\x3b\x98\x6b\x35\xe6\xb8\xe6\x22\xe8\xcd\xde\xfe\x41\xc9\x08\x9b\xde\x76\xaf\x61\x59\xb3\xee\x64\x74\x2f\x39\xdb\x00\x1f\x80\xe5\x3f\x61\xd1\xfb\x38\x8c\x77\x5f\xd2\xc9\x09\x42\x7b\x9c\x67\x45\x88\xd5\x24\x54\x06\x50\x44\x09\x8f\x87\xf2\xee\xcc\x64\x89\x2e\x28\xc1\x75\x3f\x1b\x6c\x33\x91\xca\xa1\x88\x0a\xaf\x83\x3b\x42\x6b\x7b\xd1\x91\x1a\x42\x9f\xe0\x17\x25\xc4\x63\x0a\x7c\x26\x87\xb3\x24\x39\x29\xe2\x90\xe0\x07\x9d\x73\xa2\x7b\xc9\x03\xbe\xb6\xf7\x9a\x32\x91\x47\xdd\xed\x76\x1f\x88\x74\xd9\x4d\x06\x65\xd0\xb8\x08\x07\x35\xfd\x14\xc2\xf4\xcd\x43\x86\x1e\x41\x86\x95\x75\x92\xad\x1c\x6f\xf2\xb9\x43\x7e\xc3\x68\x7c\x4f\xb9\xc7\x54\xee\xeb\x6f\x09\xcc\x23\xce\x7d\x06\x7e\xdf\xfb\xc8\xe9\x17\xfa\x23\x31\xa0\x9f\x4e\xf9\x1e\xdb\xeb\x9e\xac\xf4\x0a\xe2\x3a\x4c\x93\x04\xe2\xf3\x9a\xfe\xe8\x3a\x7f\x9a\x50\x07\x27\xe0\x9d\xd8\x5f\x45\xc2\xca\x4d\x65\x5b\x8f\x23\x61\x53\x89\xb5\x4d\xb9\x5c\x72\x23\x50\x32\x8f\xdc\x89\x8a\x2d\xac\xab\x53\x55\x97\xa9\x90\x4c\xdb\xd2\x8e\xfc\xb2\x3c\x4a\x2d\x8f\x0f\xa5\x3e\x1b\xc7\xa5\x6a\x7d\x4c\x66\x4b\x9c\x8e\x31\x47\x1c\xd9\x3e\xbe\xe2\xd9\xe3\xa7\x57\x9c\x1c\xb0\xa6\x57\xb7\x28\x41\x7b\x1a\x5c\x13\x28\x69\x90\xf4\xc3\xd1\x8f\x0e\x9f\x34\x56\x6c\xb8\xf2\x39\x78\x31\x2b\x9a\x53\xc1\x1a\x93\xc0\x1e\x49\x64\x8f\x43\xb0\x0d\x2d\x83\xb7\x5a\x49\x78\x22\xa5\x3c\x6a\x83\xb4\x39\x23\x2d\x0f\xb0\xed\x5e\x62\xfc\x74\x9d\xfd\xf8\xb0\x87\xf7\xd7\x31\xae\xdb\x2b\x68\x72\x70\x21\x4d\x92\xd9\xbf\xfe\x79\x50\xa5\xae\x3a\x43\xad\xfa\xbc\x95\xda\x22\x45\xd2\x93\x1c\xdc\x66\xa2\x75\xde\xba\x8e\x46\xc2\x6a\xeb\xf2\x27\x59\xfc\xd7\x19\xed\xde\x3a\x79\xf7\xd6\xb9\x82\xdf\xa3\x5e\x22\x89\xe1\x15\xbc\x74\x8a\xeb\x2b\xf0\xdc\x78\xe6\xd1\xa9\xc5\x90\xcd\xd7\xcd\xfa\x20\xe5\xeb\xeb\x33\x12\x98\xcc\xfe\x6a\x5b\xa0\x6f\x21\xfa\xae\x34\x25\x4a\xd8\xd8\xd6\x41\xc3\xbd\xa7\xb4\x60\x61\x5d\x37\xc3\x85\xb0\xad\x09\xc0\x03\xdc\xde\xc2\x28\x7e\xeb\x9a\xcd\xf7\xbc\x46\xb8\xbb\xbb\x2c\x52\xa9\x96\xff\x23\x88\xbd\x59\x10\x22\x20\x95\x34\x3f\xdf\xc2\x76\x84\x1a\x8d\x3c\xea\xc5\x08\xde\x6a\xe4\x1e\x41\x54\x28\x6e\x60\x55\x59\xa8\xb8\x27\x2c\xd1\x7b\x08\xb6\x3b\x86\x35\x57\x7a\x07\xb0\xaa\xe3\x0b\x34\xa0\xde\xc4\x97\xe7\x59\x07\x67\xab\x30\xfa\x22\x55\xf8\xbf\xc2\xfc\x57\x2a\x0c\xe7\xfc\x93\x9a\x25\x7b\x5c\xb3\xbc\xab\x94\xef\x09\xbe\x22\xe6\xb7\xc1\xd6\x3c\x3e\xe5\xe8\xfb\x0a\x4d\xa0\x2e\x20\x2a\xbf\x8e\x7b\xee\xee\x46\x70\xd8\x5f\x0e\x4b\xe5\x03\xba\x8e\xf2\x47\x8c\xef\x94\x4b\x95\xc6\x3a\x84\x40\xae\x6a\xf4\x9e\x97\x38\x82\x77\x15\xee\x5a\x4a\x70\x03\xc6\x06\x98\x23\xb4\x1e\x25\xac\x54\xa8\x6c\x1b\x20\x54\x08\xc2\x9a\x85\x72\x75\xe4\xda\x69\x03\x9d\x5c\xde\x71\xfd\xde\xa7\xf7\x49\xb5\xcf\x3d\x81\xbf\xb0\x75\xb2\x71\x51\xa4\xdd\x57\x65\x11\xff\xd3\x70\xf6\xef\x00\x00\x00\xff\xff\xfe\x99\xcc\xb1\x7b\x15\x00\x00")

func templatesPasswordChangedHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesPasswordChangedHtml,
		"templates/password-changed.html",
	)
}

func templatesPasswordChangedHtml() (*asset, error) {
	bytes, err := templatesPasswordChangedHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/password-changed.html", size: 5499, mode: os.FileMode(438), modTime: time.Unix(1497803934, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTestEmailTemplateHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x92\xdd\x4e\xc3\x30\x0c\x85\xef\x27\xed\x1d\xac\xdc\x53\x23\xed\x02\x69\xb4\x91\x10\x82\x17\x60\x2f\x90\xc5\x81\x04\xf2\x53\x25\x66\x62\x4c\x7d\x77\xd4\xb5\x6c\x2b\x03\xd6\xab\x3a\xfe\xce\xf1\x69\x9d\xda\x72\xf0\x72\x3e\x9b\xcf\x00\x00\x6a\x6b\x14\xc9\xe1\x7d\x5f\xb3\x63\x6f\xe4\xca\x14\x86\x87\xa0\x9c\x87\x3b\x52\x2d\x9b\x5c\xe3\xd0\xe9\x85\x27\xb8\x77\xf1\x0d\xb2\xf1\x8d\x28\xbc\xf5\xa6\x58\x63\x58\x80\xcd\xe6\xb9\x11\x96\xb9\x2d\x4b\xc4\xa0\x3e\x34\xc5\x6a\x9d\x12\x17\xce\xaa\xed\x0b\x9d\x02\x1e\x0e\x70\x51\x2d\xaa\x1b\xd4\xa5\x1c\xcf\xaa\xe0\x62\xa5\x4b\x11\xe3\xc4\x31\x2e\x8e\x79\xc7\x72\x9d\x68\x2b\x27\x81\xc8\x6d\x40\x7b\x55\x4a\x23\x74\x8a\xac\x5c\x34\x59\xc0\x3e\x5c\x23\x5a\x45\xe4\xe2\xcb\x12\x16\xd9\x04\xb8\xbe\x15\x27\x5f\x3e\xa8\xfd\xb7\x98\xfc\x95\x4d\xd9\x7d\xf6\x1e\x5e\x48\x98\x82\x03\xcc\xf2\x31\xa7\x50\x23\xb1\xfc\xad\x4d\x72\xb7\x83\xaa\x47\xa0\xeb\x6a\x24\x9a\x24\x3d\xb5\x59\xa5\xd1\xe4\x6f\x9b\x55\xba\x64\xf2\xf4\xbe\x7e\x35\x9a\x2f\xc4\x19\xa9\xff\xcc\x7e\xfc\x13\x24\x7f\x86\xd5\x36\xa3\x3c\x43\xfb\xa7\x9f\x71\x9f\x22\x9b\xc8\x5d\x77\x26\x02\x9c\x6e\x0b\xc9\x6d\x8e\xdb\xc4\xc3\x3a\x6b\xdc\xdf\xd2\xaf\x00\x00\x00\xff\xff\x8c\x5c\x12\xd6\xac\x02\x00\x00")

func templatesTestEmailTemplateHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesTestEmailTemplateHtml,
		"templates/test-email-template.html",
	)
}

func templatesTestEmailTemplateHtml() (*asset, error) {
	bytes, err := templatesTestEmailTemplateHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/test-email-template.html", size: 684, mode: os.FileMode(438), modTime: time.Unix(1497727518, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/confirm-de.html": templatesConfirmDeHtml,
	"templates/confirm-en.html": templatesConfirmEnHtml,
	"templates/confirm.html": templatesConfirmHtml,
	"templates/forgot-password-de.html": templatesForgotPasswordDeHtml,
	"templates/forgot-password-en.html": templatesForgotPasswordEnHtml,
	"templates/forgot-password.html": templatesForgotPasswordHtml,
	"templates/password-changed.html": templatesPasswordChangedHtml,
	"templates/test-email-template.html": templatesTestEmailTemplateHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"confirm-de.html": &bintree{templatesConfirmDeHtml, map[string]*bintree{}},
		"confirm-en.html": &bintree{templatesConfirmEnHtml, map[string]*bintree{}},
		"confirm.html": &bintree{templatesConfirmHtml, map[string]*bintree{}},
		"forgot-password-de.html": &bintree{templatesForgotPasswordDeHtml, map[string]*bintree{}},
		"forgot-password-en.html": &bintree{templatesForgotPasswordEnHtml, map[string]*bintree{}},
		"forgot-password.html": &bintree{templatesForgotPasswordHtml, map[string]*bintree{}},
		"password-changed.html": &bintree{templatesPasswordChangedHtml, map[string]*bintree{}},
		"test-email-template.html": &bintree{templatesTestEmailTemplateHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

