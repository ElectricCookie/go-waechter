package waechter_test

import (
	"log"
	"testing"

	waechter "github.com/ElectricCookie/go-waechter"
	"github.com/davecgh/go-spew/spew"
)

func getNewWaechter() *waechter.Waechter {

	dbAdapter := waechter.NewMongoAdapter("localhost:27017", "waechter-test")

	dbAdapter.Db.DropDatabase()

	emailAdapter := waechter.email.NewTestEmailAdapter()

	translations := &waechter.DefaultTranslations{
		CompanyName:     "test-company",
		CompanyWebsite:  "test-website.com",
		LogoURL:         "https://codyhouse.co/demo/advanced-search-form/img/cd-logo.svg", //Shoutout to codyhouse.co for this awesome placeholder
		DefaultLanguage: "en",
		Locales:         waechter.GetDefaultTranslations(),
		ConfirmAddress:  "test-website.com/confirm/",
	}

	return waechter.New("somesecret", "go-waechter", dbAdapter, emailAdapter, translations)

}

func register(w *waechter.Waechter) (*string, *waechter.AuthError) {
	return w.Register(waechter.RegisterParams{
		Username:  "ElectricCookie",
		Email:     "somebody@something.com",
		Password:  "test123",
		Language:  "de",
		FirstName: "Electric",
		LastName:  "Cookie",
	})
}

func registerActivated(w *waechter.Waechter) {
	t, _ := w.Register(waechter.RegisterParams{
		Username:  "ElectricCookie",
		Email:     "somebody@something.com",
		Password:  "test123",
		Language:  "de",
		FirstName: "Electric",
		LastName:  "Cookie",
	})
	u, _ := w.DbAdapter.GetUserByUsername("ElectricCookie")
	w.ActivateAccount(u.ID, *t)
}

func TestRegister(t *testing.T) {

	w := getNewWaechter()

	register(w)

}

func TestActivateAccount(t *testing.T) {

	w := getNewWaechter()

	token, _ := register(w)

	user, findErr := w.DbAdapter.GetUserByUsername("ElectricCookie")

	if findErr != nil {
		log.Fatal(findErr)
	}

	if user.EmailVerfied {
		log.Fatal("Email was intitially verified.")
	}

	activationErr := w.ActivateAccount(user.ID, *token)

	if activationErr != nil {
		log.Fatal(activationErr)
	}

	user, findErr = w.DbAdapter.GetUserByUsername("ElectricCookie")

	if !user.EmailVerfied {
		log.Fatal("Email was not verified.")
	}

}

func TestLogin(t *testing.T) {

	w := getNewWaechter()

	registerActivated(w)

	jwtS, err := w.LoginWithUsernameOrEmail(waechter.LoginEmailOrUsernameData{
		UsernameOrEmail: "ElectricCookie",
		Password:        "test123",
		RememberMe:      false,
	})

	if err != nil {
		spew.Dump(err)
		t.Fatal(err)
	}

	_, verifyErr := w.CheckRefreshToken(*jwtS)

	if verifyErr != nil {
		spew.Dump(verifyErr)
		t.Fatal(verifyErr)
	}

}
